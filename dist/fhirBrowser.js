/*! For license information please see fhirBrowser.js.LICENSE.txt */
(()=>{var e={70:()=>{customElements.define("app-bar",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML=`\n            <link href="./material.css" rel="stylesheet"/>\n            <style>\n                div {\n                    background-color: var(--primary-color, #000);\n                    text-transform: uppercase;\n                    color:#FFF; \n                    padding:1em;\n                    display:flex;\n                    flex-direction:row;\n                    align-items:center;\n                }\n                i {\n                    margin-right: 1.3em;\n                    cursor: pointer;\n                }\n            </style>\n            <div><i id="menu" class="material-icons">menu</i><span>${this.getAttribute("title")}</span></div>\n        `}connectedCallback(){this._shadow.getElementById("menu").addEventListener("click",(e=>{this.dispatchEvent(new CustomEvent("navigationClick",{bubbles:!1,cancelable:!1})),e.stopPropagation()}))}})},444:()=>{customElements.define("data-table",class extends HTMLElement{constructor(){super(),this.rowClickEvent=new CustomEvent("rowclick",{bubbles:!1,cancelable:!1});const e=this.attachShadow({mode:"open"});e.innerHTML='\n            <link href="./material.css" rel="stylesheet"/>\n            <style>\n                div {\n                    background-color: var(--background-color, white);\n                    border: 1px solid var(--border-color, gray);\n                    border-radius: 4px;\n                    height:100%;\n                }\n                table {\n                    border: 0;\n                    white-space: nowrap;\n                    border-collapse: collapse;\n                    display:flex;\n                    flex-direction:column;\n                    height:100%;\n                }\n                thead, tbody tr, tfoot {\n                    display:table;\n                    width:100%;\n                    table-layout:fixed;\n                }\n                thead {\n                    width: calc( 100% - 5px );\n                }\n                th {\n                    text-align: left;\n                    height: 56px;\n                    padding-right: 16px;\n                    padding-left: 16px;\n                    overflow:hidden;\n                }\n                tbody {\n                    border-top: 1px solid var(--border-color, gray);\n                    display:block;\n                    overflow-y:auto;\n                    flex: 1 1 auto;\n                }\n                tbody tr {\n                    cursor:pointer;\n                    border-bottom: 1px solid var(--border-color, gray);\n                }\n                tbody tr:hover, tbody tr.selected {\n                    background-color: var(--hover-color, rgba(0, 0, 0, 5%));\n                }\n                tbody td {\n                    height: 52px;\n                    padding-right: 16px;\n                    padding-left: 16px;\n                    overflow:hidden;\n                    text-overflow: ellipsis;\n                }\n                tfoot {\n                    border-top: 1px solid var(--border-color, gray);\n                }\n                tfoot td {\n                    text-align: right;\n                    overflow: hidden;\n                }\n            </style>\n            <div>\n                <table>\n                    <thead>\n                        <tr id="header"></tr>\n                    </thead>\n                    <tbody id="body">\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td id="footer">\n                                <slot name="footer"/>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        ',this._header=e.getElementById("header"),this._body=e.getElementById("body"),this._footerCell=e.getElementById("footer")}addColumn(e){let t=document.createElement("th"),n=document.createTextNode(e);t.appendChild(n),this._header.appendChild(t),this._footerCell.colSpan=this._header.childElementCount}addRow(e,t){let n=document.createElement("tr");n.id=e;for(const[,e]of Object.entries(t))n.insertAdjacentHTML("beforeend",`<td>${e}</td>`);n.addEventListener("click",function(e){let t=this._body.querySelector(".selected");t&&t.classList.remove("selected");let n=e.target;for(;n&&"TR"!==n.nodeName;)n=n.parentNode;n&&(n.classList.add("selected"),this.dispatchEvent(new CustomEvent("rowclick",{bubbles:!1,cancelable:!1,detail:{resourceId:n.id}}))),e.stopPropagation()}.bind(this)),this._body.appendChild(n)}removeAll(){for(;this._body.firstChild;)this._body.removeChild(this._body.lastChild)}})},760:()=>{customElements.define("app-linear-loader",class extends HTMLElement{connectedCallback(){this.attachShadow({mode:"closed"}).innerHTML='\n            <style>\n                .track {\n                    background-color: var(--border-color);\n                    overflow: hidden;\n                }\n                .thumb {\n                    height: 0.1em;\n                    width: 50%;\n                    background-color: var(--primary-color);\n                    left: -50%;\n                    position: relative;\n                    animation: loading 2s ease-in 0.5s infinite;\n                }\n                @keyframes loading {\n                    0% {transform:translateX(0)}\n                    to {transform:translateX(400%)}\n                }\n            </style>\n            <div class="track">\n                <div class="thumb" />\n            </div>\n       '}})},453:()=>{customElements.define("data-table-pagination",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link rel="stylesheet" href="./material.css">\n            <style>\n                #wrapper {\n                    padding: 12px;\n                    font-family: inherit;\n                    font-size: .875rem;\n                }\n                button {\n                    border:0;\n                    background:none;\n                    vertical-align:middle;\n                    cursor:pointer;\n                    color:var(--text-color-normal);\n                }\n                button[disabled] {\n                    cursor: default;\n                    color:var(--text-color-disabled);\n                }\n                span {\n                    vertical-align:middle;\n                    margin: 0 24px;\n                }            \n            </style>\n            <div id="wrapper">\n                <span id="text"></span>\n                <button id="first" title="first" disabled><i class="material-icons">first_page</i></button>\n                <button id="previous" title="previous" disabled><i class="material-icons">chevron_left</i></button>\n                <button id="next" title="next" disabled><i class="material-icons">chevron_right</i></button>\n                <button id="last" title="last" disabled><i class="material-icons">last_page</i></button>\n            </div>\n        '}connectedCallback(){this._shadow.getElementById("wrapper").addEventListener("click",(e=>{let t=e.target;for(;t&&"BUTTON"!==t.nodeName;)t=t.parentNode;t&&!t.disabled&&this.dispatchEvent(new CustomEvent("pagination",{bubbles:!1,cancelable:!1,detail:{button:t.id}}))}))}set first(e){this._shadow.getElementById("first").disabled=!e}set previous(e){this._shadow.getElementById("previous").disabled=!e}set next(e){this._shadow.getElementById("next").disabled=!e}set last(e){this._shadow.getElementById("last").disabled=!e}set text(e){this._shadow.getElementById("text").innerText=e}})},586:()=>{customElements.define("app-round-button",class extends HTMLElement{connectedCallback(){this.attachShadow({mode:"closed"}).innerHTML=`\n            <link href="./material.css" rel="stylesheet"/>\n            <style>\n                #wrapper {\n                    padding:8px;\n                    cursor:pointer;\n                    text-align:center;\n                    border:0 none;\n                    color: inherit;\n                    background-color:transparent;\n                }\n                #wrapper:hover {\n                    background-color:var(--hover-color, rgba(0,0,0,5%));\n                    border-radius: 50%;\n                }\n            </style>\n            <div id="wrapper" class="material-icons">${this.innerHTML}</div>\n        `}})},187:()=>{customElements.define("app-tabs",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <style>\n                #wrapper {\n                    display:flex;\n                    flex-direction:row;            \n                    flex-wrap: nowrap;        \n                }\n                ::slotted(app-tab) {\n                    flex-grow:1;\n                    border-bottom: 2px solid transparent;\n                }\n                ::slotted(app-tab:hover) {\n                    background-color:var(--hover-color, rgba(0, 0, 0, 5%));\n                }\n                ::slotted(app-tab[selected]) {\n                    border-bottom-color: var(--primary-color, #000);\n                }\n            </style>\n            <template id="template">\n                <div id="wrapper"><slot></slot></div>\n            </template>\n        '}connectedCallback(){const e=this._shadow.getElementById("template").content;this._shadow.appendChild(e.cloneNode(!0)),this._shadow.getElementById("wrapper").onclick=e=>{"APP-TAB"===e.target.nodeName&&(this._shadow.querySelector("slot").assignedElements().forEach((e=>e.removeAttribute("selected"))),e.target.setAttribute("selected","selected"),this.dispatchEvent(new CustomEvent("click",{bubbles:!1,cancelable:!1,detail:{tabId:e.target.id}})),e.stopPropagation())}}}),customElements.define("app-tab",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML=`\n            <style>\n                button {\n                    background-color: transparent;\n                    border: 0 none;\n                    color: var(--text-color-normal, black);\n                    cursor: pointer;\n                    font-family: inherit;\n                    font-size: inherit;\n                    height: 3em;\n                    text-transform: uppercase;\n                    white-space: nowrap;\n                    width:100%;\n                }\n            </style>\n            <button>${this.innerHTML}</button>\n        `}})},546:()=>{customElements.define("app-title",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <style>\n                #wrapper {\n                    align-items: center;\n                    display: flex;\n                    flex-direction: row;\n                    padding: 0.5em;\n                }\n                #title {\n                    flex-grow: 1;\n                    margin:0;\n                    overflow: hidden;\n                    padding-left: 0.5em;\n                    text-overflow: ellipsis;\n                }\n            </style>\n            <template id="template">\n                <div id="wrapper">\n                    <slot name="left"></slot>\n                    <h3 id="title"></h3>\n                    <slot></slot>\n                </h3>\n            </template>\n        '}connectedCallback(){const e=this._shadow.getElementById("template").content;this._shadow.appendChild(e.cloneNode(!0)),this._shadow.getElementById("title").innerText=this.getAttribute("caption")}static get observedAttributes(){return["caption"]}attributeChangedCallback(e,t,n){"caption"===e&&this.isConnected&&(this._shadow.getElementById("title").innerText=n)}})},817:()=>{customElements.define("fhir-resource-types-filter",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link href="./material.css" rel="stylesheet"/>\n            <style>\n                #wrapper {\n                    background-color: rgba(var(--text-color, black), 4%);\n                    border: 1px solid transparent;\n                    display: flex;\n                    padding: 0.7em;\n                    font-size: smaller;\n                }\n                #wrapper:focus-within {\n                    border-bottom-color: var(--primary-color, black);\n                }\n                #text {\n                    background: none;\n                    border: 0 none;\n                    color: var(--text-color-normal);\n                    flex: 1 1 auto;\n                    font-family: inherit;\n                    font-size: inherit;\n                }\n                #text:focus {\n                    outline: none; \n                }\n                #clear {\n                    cursor: pointer;\n                    font-size: inherit;\n                    line-height: unset;\n                }\n            </style>\n            <div id="wrapper">\n                <input id="text" type="text" placeholder="Type to filter"/>\n                <i id="clear" class="material-icons" title="clear">close</i>\n            </div>\n        '}connectedCallback(){const e=this._shadow.getElementById("text");function t(t){this.dispatchEvent(new CustomEvent("filterChanged",{bubbles:!1,cancelable:!1,detail:{text:e.value}}))}this._shadow.getElementById("clear").addEventListener("click",(()=>{e.value&&(e.value="",t.call(this))})),this._shadow.getElementById("wrapper").addEventListener("mousedown",(t=>{t.preventDefault(),t.stopPropagation(),e.focus()})),e.addEventListener("input",t.bind(this))}clear(){this._shadow.getElementById("clear").click()}})},141:()=>{customElements.define("fhir-server-details",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <style>\n                #wrapper {\n                    overflow-y: auto;\n                }\n                #wrapper > div {\n                    padding: 0.5em 1em;\n                }\n                #wrapper > div:hover {\n                    background-color: var(--hover-color, rgba(0, 0, 0, 5%));\n                }\n                span {\n                    display: block;\n                }\n                span:nth-of-type(1) {\n                    text-overflow: ellipsis;\n                    white-space: nowrap;\n                    overflow: hidden;\n                    text-transform: capitalize;\n                    color: var(--text-color-normal, black);\n                }\n                span:nth-of-type(2) {\n                    font-size: 0.875em;\n                    color: rgba(var(--text-color, "0, 0, 0"), 54%);\n                    overflow-wrap: break-word;\n                }\n            </style>\n            <div id="wrapper"></div>\n        '}set metadata(e){const t=this._shadow.getElementById("wrapper");for(;t.firstChild;)t.removeChild(t.lastChild);function n(e,n){if(void 0===n)return;const r=document.createElement("div"),a=document.createElement("span");a.innerText=e,r.appendChild(a);const s=document.createElement("span");s.innerText=n,r.appendChild(s),t.appendChild(r)}n("copyright",e.copyright),n("description",e.description),n("fhirVersion",e.fhirVersion),e.implementation&&(n("implementation description",e.implementation.description),n("implementation name",e.implementation.name),n("implementation url",e.implementation.url)),n("language",e.language),n("name",e.name),n("publisher",e.publisher),e.software&&(n("software name",e.software.name),n("software version",e.software.version),n("software release date",e.software.releaseDate))}})},251:()=>{customElements.define("fhir-server-selector",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link href="./material.css" rel="stylesheet"/>\n            <style>\n                #wrapper {\n                    padding:25px;\n                }\n                #server {\n                    background-color: var(--background-color, white);\n                    border: 1px solid var(--border-color, rgba(0,0,0,38%));\n                    border-radius: 4px;\n                    color: var(--text-color-normal, rgb(0,0,0,87%));\n                    font-family: inherit;\n                    font-size: 1em;\n                    padding: 8px 5px 5px 5px;\n                    width: 100%;\n                }\n                #server:hover {\n                    border-color: var(--border-color, rgba(0,0,0,38%));\n                }\n                #server:active {\n                    outline-style: auto;\n                    outline-color: var(--primary-color, black);\n                }\n                #server:focus-visible {\n                    outline-color: var(--primary-color, black);\n                }\n                #server-wrapper {\n                    position:relative;\n                }\n                #server-label {\n                    position: absolute;\n                    top: -0.8em;\n                    left: 0.5em;\n                    background-color: var(--background-color, white);\n                    font-size: 0.7em;   \n                    font-family: inherit;\n                    padding: 0 5px;"\n                }\n                #server-url {\n                    overflow-wrap: break-word;\n                    color: var(--text-color-disabled);\n                    font-size: 0.9em;\n                    margin-top: 0.5em;\n                }\n            </style>\n            <div id="wrapper">\n                <div id="server-wrapper">\n                    <label id="server-label">FHIR server</label>\n                    <select id="server"><option hidden selected>Select a server</option></select>\n                </div>\n                <div id="server-url"></div>\n            </div>\n        ',this._conf=null,this._server=this._shadow.getElementById("server")}connectedCallback(){this.loadConf().then((e=>{this._conf=e;for(const t of Object.keys(e).sort()){const e=document.createElement("OPTION");e.setAttribute("value",t),e.appendChild(document.createTextNode(t)),this._server.appendChild(e)}})),this._server.addEventListener("change",(()=>{const e=this._conf[this._server.value];this._shadow.getElementById("server-url").innerText=e.url,this.connect(e),this.dispatchEvent(new CustomEvent("serverchanged",{bubbles:!1,cancelable:!1,detail:{server:e}}))}))}connect(e){if(e.auth)switch(e.auth.method){case"oauth2":this.oauth2_getToken(e.auth.setup).then((t=>{e.headers.Authorization=`${t.token_type} ${t.access_token}`}));break;case"basic":let t=btoa(`${e.auth.setup.username}:${e.auth.setup.password}`);e.headers.Authorization=`Basic ${t}`}}async oauth2_getToken(e){let t={client_id:e.client_id,client_secret:e.client_secret,grant_type:e.grant_type,username:e.username,password:e.password},n=new URLSearchParams(t);return(await fetch(e.access_token_url,{headers:{"Content-type":"application/x-www-form-urlencoded"},method:"POST",body:n.toString()})).json()}async loadConf(){let e=localStorage.getItem("conf");return null===e?await fetch("./default.conf",{cache:"reload"}).then((e=>e.json())).then((e=>(localStorage.setItem("conf",JSON.stringify(e)),e))):JSON.parse(e)}})}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}(()=>{"use strict";n(70),n(187),n(817),customElements.define("fhir-resource-types",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link href="./material.css" rel="stylesheet"/>\n            <style>\n                #wrapper {\n                    display: flex;\n                    flex-direction: column;\n                    height:100%;\n                }\n                #list {\n                    flex:1 1 auto;\n                    height:0;\n                    overflow:auto;\n                }\n                ul {\n                    list-style: none;\n                    padding: 0;\n                    margin: 0;\n                }\n                li {\n                    cursor: pointer;\n                    padding: 0.3em 1em;\n                }\n                li:hover, li.selected {\n                    background-color:var(--hover-color, lightgray);\n                }\n            </style>\n            <div id="wrapper">\n                <fhir-resource-types-filter id="filter"></fhir-resource-types-filter>\n                <div id="list"><ul></ul></div>\n            </div>\n        ',this._metadata=null}connectedCallback(){this._shadow.getElementById("filter").addEventListener("filterChanged",(({detail:e})=>{const t=this._shadow.getElementById("list").firstElementChild,n=e.text.toLowerCase();t.childNodes.forEach((e=>{e.hidden=!e.id.toLowerCase().startsWith(n)}))})),this._shadow.getElementById("list").onclick=({target:e})=>{if("LI"===e.nodeName){let t=this._shadow.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected"),this.dispatchEvent(new CustomEvent("resourceTypeSelected",{bubbles:!1,cancelable:!1,detail:{resourceType:this._metadata.rest[0].resource.filter((t=>t.type===e.id))[0]}}))}}}set metadata(e){this._metadata=e,this._shadow.getElementById("filter").clear();const t=this._shadow.getElementById("list");t.scrollTop=0;const n=t.firstElementChild;for(;n.firstChild;)n.removeChild(n.lastChild);e.rest[0].resource.forEach((e=>{const t=document.createElement("li");t.id=e.type,t.innerHTML=e.type,n.appendChild(t)}))}}),n(141),customElements.define("fhir-metadata",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <style>\n                #wrapper {\n                    display:flex;\n                    flex-direction: column;\n                    height : 100%;\n                }\n                #tabs {\n                    border-bottom:1px solid var(--border-color, gray);\n                }\n                #resourceTypes, #serverDetails {\n                    flex:1 1 auto;\n                    overflow: auto;\n                    height:0;\n                }\n            </style>\n            <div id="wrapper">\n                <app-tabs id="tabs">\n                    <app-tab id="tabResources" selected>Resource Types</app-tab>\n                    <app-tab id="tabDetails">Details</app-tab>\n                </app-tabs>\n                <fhir-resource-types id="resourceTypes"></fhir-resource-types>\n                <fhir-server-details id="serverDetails" hidden></fhir-server-details>\n            </div>\n        ',this._metadata=null}connectedCallback(){this._shadow.getElementById("tabs").addEventListener("click",(({detail:e})=>{const t=e.tabId;this._shadow.getElementById("resourceTypes").hidden="tabResources"!==t,this._shadow.getElementById("serverDetails").hidden="tabDetails"!==t})),this._shadow.getElementById("resourceTypes").addEventListener("resourceTypeSelected",(({detail:e})=>{this.dispatchEvent(new CustomEvent("resourceTypeSelected",{bubbles:!1,cancelable:!1,detail:{resourceType:e.resourceType}}))}))}set metadata(e){this._shadow.getElementById("resourceTypes").metadata=e,this._shadow.getElementById("serverDetails").metadata=e}}),n(251),customElements.define("app-left-panel",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <style>\n                #wrapper {\n                    height:100%;\n                }\n                #content {\n                    width:300px;\n                    display:flex;\n                    flex-direction: column;\n                    height : 100%;\n                }\n                #metadata {\n                    flex: 1 1 auto;\n                    height: 0;\n                }\n            </style>\n            <div id="wrapper">\n                <div id="content">\n                    <fhir-server-selector id="serverSelector"></fhir-server-selector>\n                    <fhir-metadata id="metadata"></fhir-metadata>\n                </div>\n            </div>\n        '}connectedCallback(){this._shadow.getElementById("serverSelector").addEventListener("serverchanged",(({detail:e})=>{const t=e.server;this.dispatchEvent(new CustomEvent("serverchanged",{bubbles:!1,cancelable:!1,detail:{server:t}})),this.fetchMetadata(t).then((e=>{this._shadow.getElementById("metadata").metadata=e}))})),this._shadow.getElementById("metadata").addEventListener("resourceTypeSelected",(({detail:e})=>{this.dispatchEvent(new CustomEvent("resourceTypeSelected",{bubbles:!1,cancelable:!1,detail:{resourceType:e.resourceType}}))}))}async fetchMetadata(e){return(await fetch(`${e.url}/metadata?_format=json`,{cache:"reload",headers:e.headers})).json()}}),n(444),n(760),n(453),n(546),customElements.define("fhir-bundle",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link href="./material.css" rel="stylesheet"/>\n            <style>\n                #wrapper {\n                    display:flex;\n                    flex-direction:column;\n                    height:100%;\n                }\n                #table {\n                    flex:1 1 auto;\n                    height:0;\n                }\n                #header {\n                    margin: 0.5em 0;\n                    display: flex;\n                    align-items: center;\n                }\n            </style>\n            <div id="wrapper">\n                <app-title id="title">\n                    <app-round-button id="help" title="Help">help</app-round-button>\n                </app-title>\n                <app-linear-loader id="loader" style="visibility:hidden;"></app-linear-loader>\n                <data-table id="table">\n                    <data-table-pagination id="pagination" slot="footer"/>\n                </data-table>\n            </div>\n        ',this._server=null,this._resourceType=null,this._skip=0,this._pageSize=20,this._link=null,this._count=null}connectedCallback(){this._shadow.getElementById("help").addEventListener("click",(()=>{window.open(this._resourceType.profile,"_blank")})),this._shadow.getElementById("pagination").addEventListener("pagination",(({detail:e})=>{this.loadPage(e.button)}));const e=this._shadow.getElementById("table");e.addColumn("id"),e.addColumn("lastUpdated"),e.addEventListener("rowclick",(({detail:e})=>{this.dispatchEvent(new CustomEvent("resourceSelected",{bubbles:!1,cancelable:!1,detail:{resourceType:this._resourceType,resourceId:e.resourceId}}))}))}load(e,t){this._server=e,this._resourceType=t,this._shadow.getElementById("title").setAttribute("caption",t.type),this._skip=0,this._link={first:`${this._server.url}/${this._resourceType.type}?_count=${this._pageSize}&_elements=entry.id,entry.lastupdated`},this.loadPage()}loadPage(e="first"){switch(e){case"first":this._skip=0;break;case"previous":this._skip-=this._pageSize;break;case"next":this._skip+=this._pageSize;break;case"last":this._skip=Math.floor(this._count/this._pageSize)*this._pageSize;break;default:return}const t=this._link[e];this._shadow.getElementById("table").removeAll();const n=this._shadow.getElementById("loader");n.style.visibility="visible",this.fetchPage(t).then((e=>{e.total?(this._count=e.total,this.parsePage(e),n.style.visibility="hidden"):this.fetchCount().then((t=>{this._count=t.total,this.parsePage(e),n.style.visibility="hidden"}))}))}parsePage(e){const t=this._shadow.getElementById("table"),n=this._shadow.getElementById("pagination");let r="0";0!=this._count&&(r=`${this._skip+1}-${Math.min(this._skip+this._pageSize,this._count)}`),n.text=`${r} of ${this._count}`,e.entry&&(e.entry.forEach((e=>{if(e.resource&&e.resource.resourceType==this._resourceType.type){let r={id:e.resource.id,lastupdated:(n=e.resource.meta.lastUpdated,new Date(n).toLocaleDateString("en",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"}))};t.addRow(e.resource.id,r)}var n})),this._link={},n.first=!1,n.previous=!1,n.next=!1,n.last=!1,e.link.forEach((e=>{switch(this._link[e.relation]=e.url,e.relation){case"first":n.first=!0;break;case"previous":n.previous=!0;break;case"next":n.next=!0;break;case"last":n.last=!0}})))}async fetchPage(e){return(await fetch(e,{headers:this._server.headers})).json()}async fetchCount(){return(await fetch(`${this._server.url}/${this._resourceType.type}?_summary=count&_format=json`,{headers:this._server.headers})).json()}}),n(586),customElements.define("fhir-resource-json",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link rel="stylesheet" href="./material.css">\n            <style>\n                #wrapper {\n                    display:flex;\n                    flex-direction:column;\n                    height:100%;\n                }\n                #content {\n                    background-color: var(--background-color, inherit);\n                    color: var(--text-color-normal, black);\n                    flex: 1 1 auto;\n                    font-family: monospace;\n                    height:0;\n                    overflow: auto;\n                    padding: 1em;\n                    white-space: nowrap;\n                }\n                dl {\n                    margin: 0;\n                    padding-left: 1.5em;\n                }\n                dt {\n                    list-style-type: none;\n                }\n                span:first-of-type {\n                    color: var(--json-viewer-properties-color, black);\n                }\n                span {\n                    color: var(--json-viewer-values-color, black);\n                }\n            </style>\n            <div id="wrapper">\n                <div id="content"></div>\n            </div>\n        '}set source(e){const t=this._shadow.getElementById("content");for(;t.firstChild;)t.removeChild(t.lastChild);!function e(t,n){let r=Array.isArray(n);t.appendChild(document.createTextNode(r?"[":"{"));let a=document.createElement("dl");for(const[t,s]of Object.entries(n)){const n=document.createElement("dt");if(!r){const e=document.createElement("span");e.innerText=`"${t}"`,n.appendChild(e),n.appendChild(document.createTextNode(": "))}if("object"==typeof s)e(n,s);else{const e=document.createElement("span");e.innerText="string"==typeof s?`"${s}"`:s,n.appendChild(e)}const o=a.lastElementChild;o&&o.nodeName==n.nodeName&&o.appendChild(document.createTextNode(",")),a.appendChild(n)}t.appendChild(a),t.appendChild(document.createTextNode(r?"]":"}"))}(t,e)}});var e=Object.prototype.toString,t=Array.isArray||function(t){return"[object Array]"===e.call(t)};function r(e){return"function"==typeof e}function a(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function s(e,t){return null!=e&&"object"==typeof e&&t in e}var o=RegExp.prototype.test,i=/\S/;var l={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},d=/\s*/,c=/\s+/,h=/\s*=/,p=/\s*\}/,u=/#|\^|\/|>|\{|&|=|!/;function m(e){this.string=e,this.tail=e,this.pos=0}function f(e,t){this.view=e,this.cache={".":this.view},this.parent=t}function b(){this.templateCache={_cache:{},set:function(e,t){this._cache[e]=t},get:function(e){return this._cache[e]},clear:function(){this._cache={}}}}m.prototype.eos=function(){return""===this.tail},m.prototype.scan=function(e){var t=this.tail.match(e);if(!t||0!==t.index)return"";var n=t[0];return this.tail=this.tail.substring(n.length),this.pos+=n.length,n},m.prototype.scanUntil=function(e){var t,n=this.tail.search(e);switch(n){case-1:t=this.tail,this.tail="";break;case 0:t="";break;default:t=this.tail.substring(0,n),this.tail=this.tail.substring(n)}return this.pos+=t.length,t},f.prototype.push=function(e){return new f(e,this)},f.prototype.lookup=function(e){var t,n,a,o=this.cache;if(o.hasOwnProperty(e))t=o[e];else{for(var i,l,d,c=this,h=!1;c;){if(e.indexOf(".")>0)for(i=c.view,l=e.split("."),d=0;null!=i&&d<l.length;)d===l.length-1&&(h=s(i,l[d])||(n=i,a=l[d],null!=n&&"object"!=typeof n&&n.hasOwnProperty&&n.hasOwnProperty(a))),i=i[l[d++]];else i=c.view[e],h=s(c.view,e);if(h){t=i;break}c=c.parent}o[e]=t}return r(t)&&(t=t.call(this.view)),t},b.prototype.clearCache=function(){void 0!==this.templateCache&&this.templateCache.clear()},b.prototype.parse=function(e,n){var r=this.templateCache,s=e+":"+(n||v.tags).join(":"),l=void 0!==r,f=l?r.get(s):void 0;return null==f&&(f=function(e,n){if(!e)return[];var r,s,l,f,b=!1,g=[],w=[],y=[],_=!1,x=!1,E="",k=0;function T(){if(_&&!x)for(;y.length;)delete w[y.pop()];else y=[];_=!1,x=!1}function C(e){if("string"==typeof e&&(e=e.split(c,2)),!t(e)||2!==e.length)throw new Error("Invalid tags: "+e);r=new RegExp(a(e[0])+"\\s*"),s=new RegExp("\\s*"+a(e[1])),l=new RegExp("\\s*"+a("}"+e[1]))}C(n||v.tags);for(var I,L,B,S,M,H,j=new m(e);!j.eos();){if(I=j.pos,B=j.scanUntil(r))for(var P=0,$=B.length;P<$;++P)f=S=B.charAt(P),function(e,t){return o.call(e,t)}(i,f)?(x=!0,b=!0,E+=" "):(y.push(w.length),E+=S),w.push(["text",S,I,I+1]),I+=1,"\n"===S&&(T(),E="",k=0,b=!1);if(!j.scan(r))break;if(_=!0,L=j.scan(u)||"name",j.scan(d),"="===L?(B=j.scanUntil(h),j.scan(h),j.scanUntil(s)):"{"===L?(B=j.scanUntil(l),j.scan(p),j.scanUntil(s),L="&"):B=j.scanUntil(s),!j.scan(s))throw new Error("Unclosed tag at "+j.pos);if(M=">"==L?[L,B,I,j.pos,E,k,b]:[L,B,I,j.pos],k++,w.push(M),"#"===L||"^"===L)g.push(M);else if("/"===L){if(!(H=g.pop()))throw new Error('Unopened section "'+B+'" at '+I);if(H[1]!==B)throw new Error('Unclosed section "'+H[1]+'" at '+I)}else"name"===L||"{"===L||"&"===L?x=!0:"="===L&&C(B)}if(T(),H=g.pop())throw new Error('Unclosed section "'+H[1]+'" at '+j.pos);return function(e){for(var t,n=[],r=n,a=[],s=0,o=e.length;s<o;++s)switch((t=e[s])[0]){case"#":case"^":r.push(t),a.push(t),r=t[4]=[];break;case"/":a.pop()[5]=t[2],r=a.length>0?a[a.length-1][4]:n;break;default:r.push(t)}return n}(function(e){for(var t,n,r=[],a=0,s=e.length;a<s;++a)(t=e[a])&&("text"===t[0]&&n&&"text"===n[0]?(n[1]+=t[1],n[3]=t[3]):(r.push(t),n=t));return r}(w))}(e,n),l&&r.set(s,f)),f},b.prototype.render=function(e,t,n,r){var a=this.getConfigTags(r),s=this.parse(e,a),o=t instanceof f?t:new f(t,void 0);return this.renderTokens(s,o,n,e,r)},b.prototype.renderTokens=function(e,t,n,r,a){for(var s,o,i,l="",d=0,c=e.length;d<c;++d)i=void 0,"#"===(o=(s=e[d])[0])?i=this.renderSection(s,t,n,r,a):"^"===o?i=this.renderInverted(s,t,n,r,a):">"===o?i=this.renderPartial(s,t,n,a):"&"===o?i=this.unescapedValue(s,t):"name"===o?i=this.escapedValue(s,t,a):"text"===o&&(i=this.rawValue(s)),void 0!==i&&(l+=i);return l},b.prototype.renderSection=function(e,n,a,s,o){var i=this,l="",d=n.lookup(e[1]);if(d){if(t(d))for(var c=0,h=d.length;c<h;++c)l+=this.renderTokens(e[4],n.push(d[c]),a,s,o);else if("object"==typeof d||"string"==typeof d||"number"==typeof d)l+=this.renderTokens(e[4],n.push(d),a,s,o);else if(r(d)){if("string"!=typeof s)throw new Error("Cannot use higher-order sections without the original template");null!=(d=d.call(n.view,s.slice(e[3],e[5]),(function(e){return i.render(e,n,a,o)})))&&(l+=d)}else l+=this.renderTokens(e[4],n,a,s,o);return l}},b.prototype.renderInverted=function(e,n,r,a,s){var o=n.lookup(e[1]);if(!o||t(o)&&0===o.length)return this.renderTokens(e[4],n,r,a,s)},b.prototype.indentPartial=function(e,t,n){for(var r=t.replace(/[^ \t]/g,""),a=e.split("\n"),s=0;s<a.length;s++)a[s].length&&(s>0||!n)&&(a[s]=r+a[s]);return a.join("\n")},b.prototype.renderPartial=function(e,t,n,a){if(n){var s=this.getConfigTags(a),o=r(n)?n(e[1]):n[e[1]];if(null!=o){var i=e[6],l=e[5],d=e[4],c=o;0==l&&d&&(c=this.indentPartial(o,d,i));var h=this.parse(c,s);return this.renderTokens(h,t,n,c,a)}}},b.prototype.unescapedValue=function(e,t){var n=t.lookup(e[1]);if(null!=n)return n},b.prototype.escapedValue=function(e,t,n){var r=this.getConfigEscape(n)||v.escape,a=t.lookup(e[1]);if(null!=a)return"number"==typeof a&&r===v.escape?String(a):r(a)},b.prototype.rawValue=function(e){return e[1]},b.prototype.getConfigTags=function(e){return t(e)?e:e&&"object"==typeof e?e.tags:void 0},b.prototype.getConfigEscape=function(e){return e&&"object"==typeof e&&!t(e)?e.escape:void 0};var v={name:"mustache.js",version:"4.2.0",tags:["{{","}}"],clearCache:void 0,escape:void 0,parse:void 0,render:void 0,Scanner:void 0,Context:void 0,Writer:void 0,set templateCache(e){g.templateCache=e},get templateCache(){return g.templateCache}},g=new b;v.clearCache=function(){return g.clearCache()},v.parse=function(e,t){return g.parse(e,t)},v.render=function(e,n,r,a){if("string"!=typeof e)throw new TypeError('Invalid template! Template should be a "string" but "'+(t(s=e)?"array":typeof s)+'" was given as the first argument for mustache#render(template, view, partials)');var s;return g.render(e,n,r,a)},v.escape=function(e){return String(e).replace(/[&<>"'`=\/]/g,(function(e){return l[e]}))},v.Scanner=m,v.Context=f,v.Writer=b;const w=v;customElements.define("fhir-resource-html",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link rel="stylesheet" href="./material.css">\n            <style>\n                #wrapper {\n                    display:flex;\n                    flex-direction:column;\n                    height:100%;\n                }\n                #content {\n                    padding: 1em;\n                    flex: 1 1 auto;\n                    height:0;\n                    overflow: auto;\n                    min-width: 50%;\n                }\n                #content pre {\n                    background-color:#fff;\n                    border-radius: 4px;\n                    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n                    font-family: monospace;\n                    padding: 0.5em;\n                    color: black;\n                    overflow:auto;\n                }\n                #content img {\n                    background-color:#fff;\n                    border-radius: 4px;\n                    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n                }\n            </style>\n            <div id="wrapper">\n                <div id="content"></div>\n            </div>\n        '}connectedCallback(){}set source(e){let t="<i>Work in progress : Mustache template</i>";"Binary"===e.resourceType&&(t=function(){const t='<img src="data:{{contentType}};base64,{{data}}"/>',n="<label>Id: </label><span>{{id}}</span><br/>\n                            <label>Version: </label><span>{{meta.versionId}}</span><br/>\n                            <label>lastUpdated: </label><span>{{meta.lastUpdated}}</span><br/>\n                            <pre><code>{{data}}</code></pre>";let r="<label>Id: </label><span>{{id}}</span><br/>\n                            <label>Version: </label><span>{{meta.versionId}}</span><br/>\n                            <label>lastUpdated: </label><span>{{meta.lastUpdated}}</span><br/>\n                            <pre>{{data}}</pre>",a=Object.assign({},e);if(a.data)switch(e.contentType){case"application/xml":r=n,a.data=window.atob(a.data);break;case"image/jpeg":case"image/png":case"image/webp":case"image/tiff":r=t;break;default:a.data=window.atob(a.data)}return w.render(r,a)}()),this._shadow.getElementById("content").innerHTML=t}}),customElements.define("fhir-resource",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML='\n            <link rel="stylesheet" href="./material.css">\n            <style>\n                #wrapper {\n                    display:flex;\n                    flex-direction: column;\n                    height : 100%;\n                }\n                #tabs {\n                    border-bottom:1px solid var(--border-color, gray);\n                }\n                #jsonView {\n                    flex:1 1 auto;\n                    height:0;\n                }\n                #htmlView {\n                    flex:1 1 auto;\n                    height:0;\n                }\n            </style>\n            <div id="wrapper">\n                <app-title id="header">\n                    <app-round-button slot="left" id="back" title="back">arrow_back</app-round-button>\n                    <app-round-button id="share" title="Share">share</app-round-button>\n                    <app-round-button id="copy" title="Copy to clipboard">content_copy</app-round-button>\n                    <app-round-button id="download" title="Download">download</app-round-button>\n                    <app-round-button id="help" title="Help">help</app-round-button>\n                </app-title>\n                <app-tabs id="tabs">\n                    <app-tab id="tabJson" selected>Json</app-tab>\n                    <app-tab id="tabHtml">Html</app-tab>\n                </app-tabs>\n                <fhir-resource-json id="jsonView"></fhir-resource-json>\n                <fhir-resource-html id="htmlView" hidden></fhir-resource-html>\n            </div>\n        ',this._jsonView=this._shadow.getElementById("jsonView"),this._htmlView=this._shadow.getElementById("htmlView"),this._server=null,this._resourceType=null,this._resourceId=null}connectedCallback(){this._shadow.getElementById("back").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("back",{bubbles:!1,cancelable:!1}))})),this._shadow.getElementById("help").addEventListener("click",(()=>{window.open(this._resourceType.profile,"_blank")})),this._shadow.getElementById("download").addEventListener("click",(()=>{const e=new File([JSON.stringify(this._resource)],this._resource.id,{type:"data:text/json;charset=utf-8"}),t=URL.createObjectURL(e),n=document.createElement("a");n.href=t,n.download=`${this._resourceType.type}#${e.name}.json`,this._shadow.appendChild(n),n.click(),this._shadow.removeChild(n),window.URL.revokeObjectURL(t)})),this._shadow.getElementById("copy").addEventListener("click",(()=>{navigator.clipboard.writeText(JSON.stringify(this._resource)).then((function(){console.log("Async: Copying to clipboard was successful!")}),(function(e){console.error("Async: Could not copy text: ",e)}))})),this._shadow.getElementById("share").addEventListener("click",(()=>{const e=`${this._resourceType.type}.${this._resource.id}.txt`,t=new File([JSON.stringify(this._resource)],e,{type:"text/plain"});navigator.share({title:e,files:[t]}).then((()=>{console.log("sharing was successful!")}),(e=>{console.error("Could not share resource: ",e)}))})),this._shadow.getElementById("tabs").addEventListener("click",(({detail:e})=>{const t=e.tabId;this._shadow.getElementById("jsonView").hidden="tabJson"!==t,this._shadow.getElementById("htmlView").hidden="tabHtml"!==t}))}load({server:e,resourceType:t,resourceId:n}){this._server=e,this._resourceType=t,this._resourceId=n,this._shadow.getElementById("header").setAttribute("caption",t.type),this.fetchResource(e,t,n).then((e=>{this._resource=e,this._jsonView.source=e,this._htmlView.source=e}))}async fetchResource(e,t,n){return(await fetch(`${e.url}/${t.type}/${n}?_format=json`,{headers:e.headers})).json()}}),"serviceWorker"in navigator&&navigator.serviceWorker.register("./service-worker.js"),window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches&&document.body.setAttribute("color-scheme","dark"),customElements.define("fhir-browser",class extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"open"}),this._shadow.innerHTML='\n            <link rel="stylesheet" href="./material.css">\n            <style>\n                #app {\n                    display: flex;\n                    flex-direction: column;\n                    height: 100vh;\n                    font-family: Roboto, Arial, monospace;\n                    font-size: 1rem;\n                    font-weight: 400;\n                    line-height: 1.5;\n                    background-color: var(--background-color, rgb(255,255,255));\n                    color: var(--text-color-normal, rgb(0,0,0,87%));\n                }\n                #header {\n                    min-height:56px;\n                }\n                #content {\n                    flex:1 1 auto;\n                    overflow: auto;\n                    height : 0;\n                }\n                #content > div {\n                    display:flex;\n                    flex-direction: row;\n                    height : 100%;\n                }\n                #leftPanel {\n                    border-right:1px solid var(--border-color, gray);\n                }\n                #bdy {\n                    overflow: hidden;\n                    flex: 1 1 auto;\n                    width: 0;\n                }\n                @media (max-width:480px){\n                    #leftPanel {\n                        height: calc(100% - 56px - 1px);\n                        position: absolute;\n                        background-color: var(--background-color, rgb(255,255,255));\n                    }\n                }\n            </style>\n            <div id="app">\n                <app-bar id="header" title="FHIR Browser"></app-bar>\n                <div id="content">\n                    <div>\n                        <app-left-panel id="leftPanel"></app-left-panel>\n                        <div id="bdy">\n                            <fhir-bundle id="bundle" hidden></fhir-bundle>\n                            <fhir-resource id="resource" hidden></fhir-resource>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\t\t',this._server=null}connectedCallback(){const e=this._shadow.getElementById("leftPanel"),t=this._shadow.getElementById("bundle"),n=this._shadow.getElementById("resource");this._shadow.getElementById("header").addEventListener("navigationClick",(()=>{e.style.display="none"==e.style.display?"flex":"none"})),this._shadow.getElementById("leftPanel").addEventListener("resourceTypeSelected",(({detail:r})=>{window.matchMedia("(max-width: 480px)").matches&&(e.style.display="none"),n.hidden=!0,t.hidden=!1,t.load(this._server,r.resourceType)})),this._shadow.getElementById("leftPanel").addEventListener("serverchanged",(({detail:e})=>{this._server=e.server,t.hidden=!0,n.hidden=!0})),n.addEventListener("back",(()=>{n.hidden=!0,t.hidden=!1})),t.addEventListener("resourceSelected",(({detail:e})=>{t.hidden=!0,n.hidden=!1,n.load({server:this._server,resourceType:e.resourceType,resourceId:e.resourceId})}))}})})()})();