/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appBar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appBar.js */ \"./src/appBar.js\");\n/* harmony import */ var _appBar_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appBar_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _appLeftPanel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appLeftPanel.js */ \"./src/appLeftPanel.js\");\n/* harmony import */ var _appPreferences_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appPreferences.js */ \"./src/appPreferences.js\");\n/* harmony import */ var _fhirBundle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fhirBundle.js */ \"./src/fhirBundle.js\");\n/* harmony import */ var _fhirResource_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fhirResource.js */ \"./src/fhirResource.js\");\n/* harmony import */ var _fhirServer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fhirServer.js */ \"./src/fhirServer.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* Only register a service worker if it's supported */\r\nif ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register('./service-worker.js');\r\n}\r\n\r\nconst AppTemplate = document.createElement('template');\r\nAppTemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"./material.css\">\r\n    <style>\r\n        #app {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100vh;\r\n            font-family: Roboto, Arial, monospace;\r\n            font-size: 1rem;\r\n            font-weight: 400;\r\n            line-height: 1.5;\r\n            background-color: var(--background-color, rgb(255,255,255));\r\n            color: var(--text-color-normal, rgb(0,0,0,87%));\r\n        }\r\n        #header {\r\n            background-color: var(--primary-color, #000);\r\n            color:#FFF;\r\n        }\r\n        h3 {\r\n            margin:0;\r\n        }\r\n        #content {\r\n            flex:1 1 auto;\r\n            overflow: auto;\r\n            height : 0;\r\n        }\r\n        #content > div {\r\n            display:flex;\r\n            flex-direction: row;\r\n            height : 100%;\r\n        }\r\n        #leftPanel {\r\n            border-right:1px solid var(--border-color, gray);\r\n            width:300px;\r\n        }\r\n        #bdy {\r\n            overflow: hidden;\r\n            flex: 1 1 auto;\r\n            width: 0;\r\n        }\r\n        @media (max-width:480px){\r\n            #leftPanel {\r\n                height: calc(100% - 56px - 1px);\r\n                position: absolute;\r\n                background-color: var(--background-color, rgb(255,255,255));\r\n                width:100%;\r\n            }\r\n        }\r\n    </style>\r\n    <div id=\"app\">\r\n        <app-bar id=\"header\" caption=\"\">\r\n            <app-round-button slot=\"left\" id=\"navigation\" title=\"Menu\" app-icon=\"menu\"></app-round-button>\r\n            <h3 slot=\"middle\">FHIR Browser</h3>\r\n            <app-round-button slot=\"right\" id=\"colorScheme\" title=\"Theme\" app-icon=\"brightness_auto\"></app-round-button>\r\n            <app-round-button slot=\"right\" id=\"serverSelectorToggle\" title=\"Connections\" app-icon=\"public\"></app-round-button>\r\n        </app-bar>\r\n        <div id=\"content\">\r\n            <div>\r\n                <app-left-panel id=\"leftPanel\" hidden></app-left-panel>\r\n                <div id=\"bdy\">\r\n                    <fhir-bundle id=\"bundle\" hidden></fhir-bundle>\r\n                    <fhir-resource id=\"resource\" hidden></fhir-resource>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <fhir-server id=\"serverSelector\" hidden></fhir-server>\r\n`;\r\n\r\ncustomElements.define('fhir-browser', class App extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(AppTemplate.content.cloneNode(true));\r\n        this._server = null;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const leftPanel = this._shadow.getElementById(\"leftPanel\");\r\n        const bundle = this._shadow.getElementById(\"bundle\");\r\n        const resource = this._shadow.getElementById(\"resource\");\r\n\r\n        this._shadow.getElementById(\"navigation\").addEventListener('click', () => {\r\n            leftPanel.hidden = !leftPanel.hidden;\r\n        });\r\n\r\n        this._shadow.getElementById(\"leftPanel\").addEventListener('resourceTypeSelected', ({ detail }) => {\r\n            if (window.matchMedia(\"(max-width: 480px)\").matches) {\r\n                leftPanel.hidden = true;\r\n            }\r\n            resource.hidden = true;\r\n            bundle.hidden = false;\r\n            bundle.load(this._server, detail.resourceType);\r\n        });\r\n\r\n        this._shadow.getElementById(\"serverSelector\").addEventListener('serverchanged', ({ detail }) => {\r\n            this._server = detail.server;\r\n            leftPanel.server = detail.server;\r\n            leftPanel.hidden = false;\r\n            bundle.hidden = true;\r\n            resource.hidden = true;\r\n        });\r\n\r\n        resource.addEventListener('back', () => {\r\n            resource.hidden = true;\r\n            bundle.hidden = false;\r\n        });\r\n\r\n        bundle.addEventListener('resourceSelected', ({ detail }) => {\r\n            bundle.hidden = true;\r\n            resource.hidden = false;\r\n            resource.load({\r\n                \"server\": this._server,\r\n                \"resourceType\": detail.resourceType,\r\n                \"resourceId\": detail.resourceId\r\n            });\r\n        });\r\n\r\n        this.setColorScheme(_appPreferences_js__WEBPACK_IMPORTED_MODULE_2__.Preferences.get(\"colorScheme\", \"auto\"));\r\n\r\n        this._shadow.getElementById(\"colorScheme\").addEventListener('click', () => {\r\n            let colorScheme = _appPreferences_js__WEBPACK_IMPORTED_MODULE_2__.Preferences.get(\"colorScheme\", \"auto\");\r\n            switch (colorScheme) {\r\n                case \"dark\":\r\n                    colorScheme = \"auto\";\r\n                    break;\r\n                case \"light\":\r\n                    colorScheme = \"dark\";\r\n                    break;\r\n                case \"auto\":\r\n                default:\r\n                    colorScheme = \"light\";\r\n                    break;\r\n            }\r\n            _appPreferences_js__WEBPACK_IMPORTED_MODULE_2__.Preferences.set(\"colorScheme\", colorScheme);\r\n            this.setColorScheme(colorScheme);\r\n        });\r\n\r\n        this._shadow.getElementById('serverSelectorToggle').addEventListener(\"click\", () => {\r\n            this._shadow.getElementById('serverSelector').hidden = false;\r\n        });\r\n    }\r\n\r\n    setColorScheme(colorScheme) {\r\n        let colorSchemeIcon = \"\";\r\n        let scheme = colorScheme;\r\n        switch (colorScheme) {\r\n            case \"dark\":\r\n                colorSchemeIcon = \"brightness_4\";\r\n                break;\r\n            case \"light\":\r\n                colorSchemeIcon = \"light_mode\";\r\n                break;\r\n            case \"auto\":\r\n            default:\r\n                if (\"auto\" === colorScheme) {\r\n                    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n                        scheme = \"dark\";\r\n                    } else {\r\n                        scheme = \"light\";\r\n                    }\r\n                }\r\n                colorSchemeIcon = \"brightness_auto\";\r\n                break;\r\n        }\r\n        const themeButton = this._shadow.getElementById(\"colorScheme\");\r\n        themeButton.setAttribute(\"app-icon\", colorSchemeIcon);\r\n        themeButton.title = `Theme ${colorScheme}`;\r\n        document.body.setAttribute(\"color-scheme\", scheme);\r\n    }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/app.js?");

/***/ }),

/***/ "./src/appBar.js":
/*!***********************!*\
  !*** ./src/appBar.js ***!
  \***********************/
/***/ (() => {

eval("customElements.define('app-bar', class AppBar extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(AppBarTemplate.content.cloneNode(true));\r\n    }\r\n});\r\n\r\nconst AppBarTemplate = document.createElement('template');\r\nAppBarTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            align-items: center;\r\n            display: flex;\r\n            flex-direction: row;\r\n            padding: 0.5em;\r\n        }\r\n        #barMiddle {\r\n            flex-grow: 1;\r\n            margin:0;\r\n            overflow: hidden;\r\n            padding-left: 0.5em;\r\n            text-overflow: ellipsis;\r\n        }\r\n        #barRight {\r\n            white-space: nowrap;\r\n        }\r\n    </style>\r\n    <main>\r\n        <div id=\"barLeft\"><slot name=\"left\"></slot></div>\r\n        <div id=\"barMiddle\"><slot name=\"middle\"></slot></div>\r\n        <div id=\"barRight\"><slot name=\"right\"></slot></div>\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appBar.js?");

/***/ }),

/***/ "./src/appCircularProgress.js":
/*!************************************!*\
  !*** ./src/appCircularProgress.js ***!
  \************************************/
/***/ (() => {

eval("customElements.define('app-circular-progress', class AppCircularProgress extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'closed' }).appendChild(AppCircularProgressTemplate.content.cloneNode(true));\r\n    }\r\n});\r\n\r\nconst AppCircularProgressTemplate = document.createElement('template');\r\nAppCircularProgressTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            height: 0.70em;\r\n            width: 0.70em;\r\n            color: var(--primary-color);\r\n            display: inline-block;\r\n            border: 0.15em solid;\r\n            border-radius: 50%;\r\n            border-top-color: transparent;\r\n            animation: rotate 1s linear infinite;\r\n        }\r\n\r\n        @keyframes rotate {\r\n            0% {transform: rotate(0);}\r\n            100% {transform: rotate(360deg);}\r\n        }\r\n    </style>\r\n    <main/>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/appCircularProgress.js?");

/***/ }),

/***/ "./src/appDataTable.js":
/*!*****************************!*\
  !*** ./src/appDataTable.js ***!
  \*****************************/
/***/ (() => {

eval("customElements.define('app-data-table', class AppDataTable extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.rowClickEvent = new CustomEvent(\"rowclick\", {\r\n            bubbles: false,\r\n            cancelable: false,\r\n        });\r\n        const shadow = this.attachShadow({ mode: 'open' });\r\n        shadow.appendChild(AppDataTableTemplate.content.cloneNode(true));\r\n        this._header = shadow.getElementById(\"header\");\r\n        this._body = shadow.getElementById(\"body\");\r\n        this._footerCell = shadow.getElementById(\"footer\");\r\n    }\r\n    addColumn(title) {\r\n        let cell = document.createElement(\"th\");\r\n        let cellText = document.createTextNode(title);\r\n        cell.appendChild(cellText);\r\n        this._header.appendChild(cell);\r\n        this._footerCell.colSpan = this._header.childElementCount;\r\n    }\r\n    addRow(id, columns) {\r\n        let row = document.createElement(\"tr\");\r\n        row.id = id;\r\n        for (const [, value] of Object.entries(columns)) {\r\n            row.insertAdjacentHTML('beforeend', `<td>${value}</td>`);\r\n        }\r\n        row.addEventListener(\"click\", onRowClick.bind(this));\r\n        this._body.appendChild(row);\r\n        function onRowClick(event) {\r\n            let prev = this._body.querySelector(\".selected\");\r\n            if (prev) {\r\n                prev.classList.remove('selected');\r\n            }\r\n            let target = event.target;\r\n            while (target && target.nodeName !== 'TR') target = target.parentNode;\r\n            if (target) {\r\n                target.classList.add('selected');\r\n                this.dispatchEvent(new CustomEvent(\"rowclick\", {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    'detail': {\r\n                        resourceId: target.id\r\n                    }\r\n                }));\r\n            }\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n    clear() {\r\n        while (this._header.firstChild) this._header.removeChild(this._header.lastChild);\r\n        this.removeAll();\r\n    }\r\n    removeAll() {\r\n        while (this._body.firstChild) this._body.removeChild(this._body.lastChild);\r\n    }\r\n});\r\n\r\nconst AppDataTableTemplate = document.createElement('template');\r\nAppDataTableTemplate.innerHTML = `\r\n    <link href=\"./material.css\" rel=\"stylesheet\"/>\r\n    <style>\r\n        div {\r\n            background-color: var(--background-color, white);\r\n            border: 1px solid var(--border-color, gray);\r\n            border-radius: 4px;\r\n            height:100%;\r\n        }\r\n        table {\r\n            border: 0;\r\n            white-space: nowrap;\r\n            border-collapse: collapse;\r\n            display:flex;\r\n            flex-direction:column;\r\n            height:100%;\r\n        }\r\n        thead, tbody tr, tfoot {\r\n            display:table;\r\n            width:100%;\r\n            table-layout:fixed;\r\n        }\r\n        thead {\r\n            width: calc( 100% - 5px );\r\n        }\r\n        th {\r\n            text-align: left;\r\n            height: 56px;\r\n            padding-right: 16px;\r\n            padding-left: 16px;\r\n            overflow:hidden;\r\n        }\r\n        tbody {\r\n            border-top: 1px solid var(--border-color, gray);\r\n            display:block;\r\n            overflow-y:auto;\r\n            flex: 1 1 auto;\r\n        }\r\n        tbody tr {\r\n            cursor:pointer;\r\n            border-bottom: 1px solid var(--border-color, gray);\r\n        }\r\n        tbody tr:hover, tbody tr.selected {\r\n            background-color: var(--hover-color, rgba(0, 0, 0, 5%));\r\n        }\r\n        tbody td {\r\n            height: 52px;\r\n            padding-right: 16px;\r\n            padding-left: 16px;\r\n            overflow:hidden;\r\n            text-overflow: ellipsis;\r\n            direction: rtl;\r\n            text-align: left;\r\n        }\r\n        tfoot {\r\n            border-top: 1px solid var(--border-color, gray);\r\n        }\r\n        tfoot td {\r\n            text-align: right;\r\n            overflow: hidden;\r\n        }\r\n    </style>\r\n    <div>\r\n        <table>\r\n            <thead>\r\n                <tr id=\"header\"></tr>\r\n            </thead>\r\n            <tbody id=\"body\">\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td id=\"footer\">\r\n                        <slot name=\"footer\"/>\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n    </div>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appDataTable.js?");

/***/ }),

/***/ "./src/appDataTablePagination.js":
/*!***************************************!*\
  !*** ./src/appDataTablePagination.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appRoundButton.js */ \"./src/appRoundButton.js\");\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appRoundButton_js__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\ncustomElements.define('app-data-table-pagination', class AppDataTablePagination extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(AppDataTablePaginationTemplate.content.cloneNode(true));\r\n    }\r\n    connectedCallback() {\r\n        this._shadow.querySelector('main').addEventListener('click', ({ target }) => {\r\n            const btn = target.closest(\"app-round-button\");\r\n            if (btn) {\r\n                this.dispatchEvent(new CustomEvent(\"pagination\", {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    \"detail\": {\r\n                        \"button\": btn.id\r\n                    }\r\n                }))\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @param {boolean} enable\r\n     */\r\n    set first(enable) {\r\n        this.setDisabled('first', !enable);\r\n    }\r\n    /**\r\n     * @param {boolean} enable\r\n     */\r\n    set previous(enable) {\r\n        this.setDisabled('previous', !enable);\r\n    }\r\n    /**\r\n     * @param {boolean} enable\r\n     */\r\n    set next(enable) {\r\n        this.setDisabled('next', !enable);\r\n    }\r\n    /**\r\n     * @param {boolean} enable\r\n     */\r\n    set last(enable) {\r\n        this.setDisabled('last', !enable);\r\n    }\r\n\r\n    /**\r\n     * @param {string} text\r\n     */\r\n    set text(text) {\r\n        this._shadow.getElementById('text').innerText = text;\r\n    }\r\n\r\n    setDisabled(name, value) {\r\n        const elm = this._shadow.getElementById(name);\r\n        if (value) {\r\n            elm.setAttribute('disabled', '');\r\n        } else {\r\n            elm.removeAttribute('disabled');\r\n        }\r\n    }\r\n});\r\n\r\nconst AppDataTablePaginationTemplate = document.createElement('template');\r\nAppDataTablePaginationTemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"./material.css\">\r\n    <style>\r\n        main {\r\n            align-items: center;\r\n            display: flex;\r\n            flex-direction:row;\r\n            font-family: inherit;\r\n            font-size: .875rem;\r\n            padding: 0.5em;\r\n        }\r\n        span {\r\n            margin: 0 24px;\r\n            flex: auto;\r\n        }\r\n    </style>\r\n    <main>\r\n        <span id=\"text\"></span>\r\n        <app-round-button id=\"first\" title=\"first\" disabled app-icon=\"first_page\"></app-round-button>\r\n        <app-round-button id=\"previous\" title=\"previous\" disabled app-icon=\"chevron_left\"></app-round-button>\r\n        <app-round-button id=\"next\" title=\"next\" disabled app-icon=\"chevron_right\"></app-round-button>\r\n        <app-round-button id=\"last\" title=\"last\" disabled app-icon=\"last_page\"></app-round-button>\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appDataTablePagination.js?");

/***/ }),

/***/ "./src/appLeftPanel.js":
/*!*****************************!*\
  !*** ./src/appLeftPanel.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appCircularProgress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appCircularProgress.js */ \"./src/appCircularProgress.js\");\n/* harmony import */ var _appCircularProgress_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appCircularProgress_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fhirMetadata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fhirMetadata.js */ \"./src/fhirMetadata.js\");\n\r\n\r\n\r\ncustomElements.define('app-left-panel', class AppLeftPanel extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(AppLeftPanelTemplate.content.cloneNode(true));\r\n    }\r\n    connectedCallback() {\r\n        this._shadow.getElementById(\"metadata\").addEventListener('resourceTypeSelected', ({ detail }) => {\r\n            this.dispatchEvent(new CustomEvent(\"resourceTypeSelected\", {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                \"detail\": {\r\n                    \"resourceType\": detail.resourceType\r\n                }\r\n            }));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {any} server\r\n     */\r\n    set server(server) {\r\n        const metadata = this._shadow.getElementById(\"metadata\");\r\n        const loader = this._shadow.getElementById(\"waiting\");\r\n        metadata.hidden = true;\r\n        loader.hidden = false;\r\n        this.fetchMetadata(server).then(data => {\r\n            metadata.metadata = data;\r\n            loader.hidden = true;\r\n            metadata.hidden = false;\r\n        });\r\n    }\r\n\r\n    async fetchMetadata(server) {\r\n        const response = await fetch(`${server.url}/metadata?_format=json`, {\r\n            \"cache\": \"reload\",\r\n            \"headers\": server.headers\r\n        });\r\n        return response.json();\r\n    }\r\n\r\n});\r\n\r\nconst AppLeftPanelTemplate = document.createElement('template');\r\nAppLeftPanelTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            height:100%;\r\n        }\r\n        #content {\r\n            display:flex;\r\n            flex-direction: column;\r\n            height : 100%;\r\n        }\r\n        #metadata {\r\n            flex: 1 1 auto;\r\n            height: 0;\r\n        }\r\n        app-circular-progress {\r\n            font-size: 2em;\r\n            text-align: center;\r\n            padding-top: 1em;\r\n        }\r\n    </style>\r\n    <main>\r\n        <div id=\"content\">\r\n            <app-circular-progress id=\"waiting\" hidden></app-circular-progress>\r\n            <fhir-metadata id=\"metadata\"></fhir-metadata>\r\n        </div>\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appLeftPanel.js?");

/***/ }),

/***/ "./src/appLinearProgress.js":
/*!**********************************!*\
  !*** ./src/appLinearProgress.js ***!
  \**********************************/
/***/ (() => {

eval("customElements.define('app-linear-progress', class AppLinearProgress extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'closed' }).appendChild(AppLinearProgressTemplate.content.cloneNode(true));\r\n    }\r\n});\r\n\r\nconst AppLinearProgressTemplate = document.createElement('template');\r\nAppLinearProgressTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            background-color: var(--border-color);\r\n            overflow: hidden;\r\n        }\r\n        .thumb {\r\n            height: 0.1em;\r\n            width: 50%;\r\n            background-color: var(--primary-color);\r\n            left: -50%;\r\n            position: relative;\r\n            animation: loading 2s ease-in 0.5s infinite;\r\n        }\r\n        @keyframes loading {\r\n            0% {transform:translateX(0)}\r\n            to {transform:translateX(400%)}\r\n        }\r\n    </style>\r\n    <main>\r\n        <div class=\"thumb\" />\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appLinearProgress.js?");

/***/ }),

/***/ "./src/appListItem.js":
/*!****************************!*\
  !*** ./src/appListItem.js ***!
  \****************************/
/***/ (() => {

eval("customElements.define('app-list-item', class AppListItem extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(AppListItemTemplate.content.cloneNode(true));\r\n    }\r\n});\r\n\r\nconst AppListItemTemplate = document.createElement('template');\r\nAppListItemTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            padding: 0.5em 1em;\r\n            background-color: inherit;\r\n        }\r\n        main:hover {\r\n            background-color: var(--hover-color, rgba(0, 0, 0, 5%));\r\n        }\r\n        #title {\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            text-transform: capitalize;\r\n            color: var(--text-color-normal, black);\r\n        }\r\n        #subTitle {\r\n            font-size: 0.875em;\r\n            color: rgba(var(--text-color, \"0, 0, 0\"), 54%);\r\n            overflow-wrap: break-word;\r\n        }\r\n    </style>\r\n    <main>\r\n        <div id=\"title\"><slot name=\"title\"></slot></div>\r\n        <div id=\"subTitle\"><slot name=\"subTitle\"></slot></div>\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appListItem.js?");

/***/ }),

/***/ "./src/appPreferences.js":
/*!*******************************!*\
  !*** ./src/appPreferences.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Preferences\": () => (/* binding */ Preferences)\n/* harmony export */ });\nclass Preferences {\r\n    static KEY = 'preferences';\r\n    static get(key, defaultValue = null) {\r\n        const lsp = localStorage.getItem(Preferences.KEY);\r\n        let preferences = null;\r\n        if (lsp !== null) {\r\n            preferences = JSON.parse(lsp);\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n        return preferences[key] || defaultValue;\r\n    }\r\n    static set(key, value) {\r\n        const lsp = localStorage.getItem(Preferences.KEY);\r\n        let preferences = null;\r\n        if (lsp !== null) {\r\n            preferences = JSON.parse(lsp);\r\n        } else {\r\n            preferences = {};\r\n        }\r\n        preferences[key] = value;\r\n        localStorage.setItem(Preferences.KEY, JSON.stringify(preferences));\r\n    }\r\n}\n\n//# sourceURL=webpack://fhirbrowser/./src/appPreferences.js?");

/***/ }),

/***/ "./src/appRoundButton.js":
/*!*******************************!*\
  !*** ./src/appRoundButton.js ***!
  \*******************************/
/***/ (() => {

eval("customElements.define('app-round-button', class AppRoundButton extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' })\r\n        this._shadow.appendChild(AppRoundButtonTemplate.content.cloneNode(true));\r\n    }\r\n\r\n    static get observedAttributes() { return [\"app-icon\", \"disabled\"]; }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const elm = this._shadow.querySelector(\"main\");\r\n        if (\"app-icon\" === name) {\r\n            elm.innerText = newValue;\r\n        } else if (\"disabled\" === name) {\r\n            if (null === newValue) {\r\n                elm.removeAttribute(\"disabled\");\r\n            } else {\r\n                elm.setAttribute(\"disabled\", \"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        this._shadow.querySelector('main').addEventListener('click', (event) => {\r\n            if (event.target.hasAttribute(\"disabled\")) {\r\n                event.stopPropagation();\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nconst AppRoundButtonTemplate = document.createElement('template');\r\nAppRoundButtonTemplate.innerHTML = `\r\n    <link href=\"./material.css\" rel=\"stylesheet\"/>\r\n    <style>\r\n        main {\r\n            padding:8px;\r\n            cursor:pointer;\r\n            text-align:center;\r\n            border:0 none;\r\n            color: inherit;\r\n            background-color:transparent;\r\n        }\r\n        main:not([disabled]):hover {\r\n            background-color:var(--hover-color, rgba(0,0,0,5%));\r\n            border-radius: 50%;\r\n        }\r\n        main[disabled] {\r\n            color:var(--text-color-disabled);\r\n            cursor: default;\r\n        }\r\n    </style>\r\n    <main class=\"material-icons\"/>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appRoundButton.js?");

/***/ }),

/***/ "./src/appTab.js":
/*!***********************!*\
  !*** ./src/appTab.js ***!
  \***********************/
/***/ (() => {

eval("customElements.define('app-tab', class AppTab extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(AppTabTemplate.content.cloneNode(true));\r\n    }\r\n    connectedCallback() {\r\n        this._shadow.querySelector(\"main\").innerHTML = this.innerHTML;\r\n    }\r\n});\r\n\r\nconst AppTabTemplate = document.createElement('template');\r\nAppTabTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            background-color: transparent;\r\n            color: inherit;\r\n            cursor: pointer;\r\n            font: inherit;\r\n            height: 3em;\r\n            line-height: 3em;\r\n            text-transform: uppercase;\r\n            text-align: center;\r\n            white-space: nowrap;\r\n            width:100%;\r\n        }\r\n    </style>\r\n    <main></main>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/appTab.js?");

/***/ }),

/***/ "./src/appTabs.js":
/*!************************!*\
  !*** ./src/appTabs.js ***!
  \************************/
/***/ (() => {

eval("customElements.define('app-tabs', class AppTabs extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(AppTabsTemplate.content.cloneNode(true));\r\n    }\r\n    connectedCallback() {\r\n        this._shadow.querySelector(\"main\").onclick = (event) => {\r\n            if (event.target.nodeName === 'APP-TAB') {\r\n                this.select(event.target.id);\r\n                event.stopPropagation();\r\n            }\r\n        };\r\n    }\r\n\r\n    select(id) {\r\n        const tab = this._shadow.querySelector('slot').assignedElements().filter(tab => tab.id === id)[0];\r\n        if (tab) {\r\n            this._shadow.querySelector('slot').assignedElements().forEach(t => t.removeAttribute('selected'));\r\n            tab.setAttribute(\"selected\", \"selected\");\r\n            this.dispatchEvent(new CustomEvent(\"click\", {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                'detail': {\r\n                    tabId: id\r\n                }\r\n            }));\r\n\r\n        }\r\n    }\r\n});\r\n\r\nconst AppTabsTemplate = document.createElement('template');\r\nAppTabsTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            display:flex;\r\n            flex-direction:row;\r\n            flex-wrap: nowrap;\r\n        }\r\n        ::slotted(app-tab) {\r\n            flex-grow:1;\r\n            border-bottom: 2px solid transparent;\r\n            font-size: smaller;\r\n        }\r\n        ::slotted(app-tab:hover) {\r\n            background-color:var(--hover-color, rgba(0, 0, 0, 5%));\r\n        }\r\n        ::slotted(app-tab[selected]) {\r\n            border-bottom-color: var(--primary-color, #000);\r\n            font-weight: bold;\r\n            color: var(--primary-color, #000);\r\n        }\r\n    </style>\r\n    <main><slot></slot></main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/appTabs.js?");

/***/ }),

/***/ "./src/fhirBundle.js":
/*!***************************!*\
  !*** ./src/fhirBundle.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appBar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appBar.js */ \"./src/appBar.js\");\n/* harmony import */ var _appBar_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appBar_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _appDataTable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appDataTable.js */ \"./src/appDataTable.js\");\n/* harmony import */ var _appDataTable_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_appDataTable_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _appDataTablePagination_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appDataTablePagination.js */ \"./src/appDataTablePagination.js\");\n/* harmony import */ var _appLinearProgress_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./appLinearProgress.js */ \"./src/appLinearProgress.js\");\n/* harmony import */ var _appLinearProgress_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_appLinearProgress_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _fhirSearch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fhirSearch.js */ \"./src/fhirSearch.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncustomElements.define('fhir-bundle', class FhirBundle extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirBundleTemplate.content.cloneNode(true));\r\n        this._server = null;\r\n        this._resourceType = null;\r\n        this._skip = 0;\r\n        this._pageSize = 20;\r\n        this._link = null;\r\n        this._count = null;\r\n        this._columns = null;\r\n        this._filters = null;\r\n    }\r\n\r\n    connectedCallback() {\r\n        this._shadow.getElementById('help').addEventListener('click', () => {\r\n            window.open(this._resourceType.profile, \"FhirBrowserHelp\");\r\n        });\r\n        this._shadow.getElementById('pagination').addEventListener(\"pagination\", ({ detail }) => {\r\n            this.loadPage(detail.button);\r\n        });\r\n        const dataTable = this._shadow.getElementById('table');\r\n        dataTable.addEventListener('rowclick', ({ detail }) => {\r\n            this.dispatchEvent(new CustomEvent(\"resourceSelected\", {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                'detail': {\r\n                    resourceType: this._resourceType,\r\n                    resourceId: detail.resourceId\r\n                }\r\n            }));\r\n        });\r\n        this._shadow.getElementById('searchToggle').addEventListener('click', () => {\r\n            this._shadow.getElementById('search').hidden = false;\r\n        });\r\n        this._shadow.getElementById('search').addEventListener('apply', ({ detail }) => {\r\n            this._filters = detail.parameters;\r\n            this._link = {\r\n                \"first\": `${this._server.url}/${this._resourceType.type}?_count=${this._pageSize}&_summary=true`\r\n            };\r\n            this.loadPage();\r\n        });\r\n    }\r\n\r\n    load(server, resourceType) {\r\n        this._server = server;\r\n        this._resourceType = resourceType;\r\n        this._filters = null;\r\n\r\n        this._shadow.getElementById(\"search\").metadata = resourceType;\r\n\r\n        this._columns = [];\r\n        if (resourceType.type === \"Binary\") {\r\n            this._columns.push({\r\n                \"label\": \"Content type\",\r\n                \"expression\": \"contentType\",\r\n                \"type\": \"string\"\r\n            })\r\n        }\r\n        this._columns.push({\r\n            \"label\": \"Id\",\r\n            \"expression\": \"id\",\r\n            \"type\": \"string\"\r\n        }, {\r\n            \"label\": \"Last updated\",\r\n            \"expression\": \"meta.lastUpdated\",\r\n            \"type\": \"date\"\r\n        });\r\n\r\n        const dataTable = this._shadow.getElementById('table');\r\n        dataTable.clear();\r\n        this._columns.forEach(column => {\r\n            dataTable.addColumn(column.label);\r\n        });\r\n\r\n        this._shadow.getElementById('title').innerText = resourceType.type;\r\n\r\n        this._link = {\r\n            \"first\": `${this._server.url}/${this._resourceType.type}?_count=${this._pageSize}&_summary=true`\r\n        };\r\n        this.loadPage();\r\n    }\r\n\r\n    loadPage(page = 'first') {\r\n        switch (page) {\r\n            case 'first':\r\n                this._skip = 0;\r\n                break;\r\n            case 'previous':\r\n                this._skip -= this._pageSize;\r\n                break;\r\n            case 'next':\r\n                this._skip += this._pageSize;\r\n                break;\r\n            case 'last':\r\n                this._skip = Math.floor(this._count / this._pageSize) * this._pageSize;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        const url = this._link[page];\r\n        this._shadow.getElementById('table').removeAll();\r\n        const loader = this._shadow.getElementById('loader');\r\n        loader.style.visibility = \"visible\";\r\n        this.fetchPage(url).then(data => {\r\n\r\n            if (data.total) {\r\n                this._count = data.total;\r\n                this.parsePage(data);\r\n                loader.style.visibility = \"hidden\";\r\n            } else {\r\n                this.fetchCount().then(count => {\r\n                    this._count = count.total;\r\n                    this.parsePage(data);\r\n                    loader.style.visibility = \"hidden\";\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    parsePage(data) {\r\n        function evalColumn(resource, expression) {\r\n            return\r\n        }\r\n        const dataTable = this._shadow.getElementById('table');\r\n        const pagination = this._shadow.getElementById('pagination');\r\n        let range = '0';\r\n        if (this._count != 0) {\r\n            range = `${this._skip + 1}-${Math.min(this._skip + this._pageSize, this._count)}`;\r\n        }\r\n        pagination.text = `${range} of ${this._count}`;\r\n        if (data.entry) {\r\n            let value = \"\";\r\n            data.entry.forEach(entry => {\r\n                if (entry.resource && entry.resource.resourceType == this._resourceType.type) {\r\n                    let row = {};\r\n                    this._columns.forEach(column => {\r\n                        value = eval(\"entry.resource.\" + column.expression);\r\n                        if (column.type === \"date\") value = formatDate(value);\r\n                        row[column.label] = value;\r\n                    });\r\n                    dataTable.addRow(entry.resource.id, row);\r\n                }\r\n                function formatDate(dte) {\r\n                    let date = new Date(dte);\r\n                    return date.toLocaleDateString(navigator.language, {\r\n                        year: 'numeric',\r\n                        month: 'numeric',\r\n                        day: 'numeric',\r\n                        hour: 'numeric',\r\n                        minute: 'numeric',\r\n                        second: 'numeric'\r\n                    });\r\n                }\r\n            });\r\n            this._link = {};\r\n            pagination.first = false;\r\n            pagination.previous = false;\r\n            pagination.next = false;\r\n            pagination.last = false;\r\n            data.link.forEach(link => {\r\n                this._link[link.relation] = link.url;\r\n                switch (link.relation) {\r\n                    case 'first':\r\n                        pagination.first = true;\r\n                        break;\r\n                    case 'previous':\r\n                        pagination.previous = true;\r\n                        break;\r\n                    case 'next':\r\n                        pagination.next = true;\r\n                        break;\r\n                    case 'last':\r\n                        pagination.last = true;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async fetchPage(base) {\r\n        const url = new URL(base);\r\n        if (this._filters) {\r\n            Object.entries(this._filters).forEach(([key, definition]) => {\r\n                url.searchParams.append(key, definition.value);\r\n            });\r\n        }\r\n        const response = await fetch(url, {\r\n            \"headers\": this._server.headers\r\n        });\r\n        return response.json();\r\n    }\r\n\r\n    async fetchCount() {\r\n        const url = new URL(`${this._server.url}/${this._resourceType.type}?_summary=count&_format=json`);\r\n        if (this._filters) {\r\n            Object.entries(this._filters).forEach(([key, definition]) => {\r\n                url.searchParams.append(key, definition.value);\r\n            });\r\n        }\r\n        const response = await fetch(url, {\r\n            \"headers\": this._server.headers\r\n        });\r\n        return response.json();\r\n    }\r\n});\r\n\r\nconst FhirBundleTemplate = document.createElement('template');\r\nFhirBundleTemplate.innerHTML = `\r\n    <link href=\"./material.css\" rel=\"stylesheet\"/>\r\n    <style>\r\n        #wrapper {\r\n            display:flex;\r\n            flex-direction:column;\r\n            height:100%;\r\n        }\r\n        #table {\r\n            flex:1 1 auto;\r\n            height:0;\r\n        }\r\n        #title {\r\n            margin:0;\r\n        }\r\n    </style>\r\n    <div id=\"wrapper\">\r\n        <app-bar>\r\n            <h3 slot=\"middle\" id=\"title\"></h3>\r\n            <app-round-button slot=\"right\" id=\"searchToggle\" title=\"Search\" app-icon=\"search\"></app-round-button>\r\n            <app-round-button slot=\"right\" id=\"help\" title=\"Help\" app-icon=\"help\"></app-round-button>\r\n        </app-bar>\r\n        <app-linear-progress id=\"loader\" style=\"visibility:hidden;\"></app-linear-progress>\r\n        <app-data-table id=\"table\">\r\n            <app-data-table-pagination id=\"pagination\" slot=\"footer\"/>\r\n        </app-data-table>\r\n    </div>\r\n    <fhir-search id=\"search\" hidden></fhir-seach>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirBundle.js?");

/***/ }),

/***/ "./src/fhirMetadata.js":
/*!*****************************!*\
  !*** ./src/fhirMetadata.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appTab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appTab.js */ \"./src/appTab.js\");\n/* harmony import */ var _appTab_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appTab_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _appTabs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appTabs.js */ \"./src/appTabs.js\");\n/* harmony import */ var _appTabs_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_appTabs_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _fhirResourceTypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fhirResourceTypes.js */ \"./src/fhirResourceTypes.js\");\n/* harmony import */ var _fhirServerDetails_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fhirServerDetails.js */ \"./src/fhirServerDetails.js\");\n\r\n\r\n\r\n\r\n\r\ncustomElements.define('fhir-metadata', class FhirMetadata extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirMetadataTemplate.content.cloneNode(true));\r\n        this._metadata = null;\r\n    }\r\n\r\n    connectedCallback() {\r\n        this._shadow.getElementById(\"tabs\").addEventListener('click', ({ detail }) => {\r\n            const tabId = detail.tabId;\r\n            this._shadow.getElementById(\"resourceTypes\").hidden = (tabId !== 'tabResources');\r\n            this._shadow.getElementById(\"serverDetails\").hidden = (tabId !== 'tabDetails');\r\n        });\r\n        this._shadow.getElementById(\"resourceTypes\").addEventListener('resourceTypeSelected', ({ detail }) => {\r\n            this.dispatchEvent(new CustomEvent(\"resourceTypeSelected\", {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                'detail': {\r\n                    \"resourceType\": detail.resourceType\r\n                }\r\n            }));\r\n        });\r\n    }\r\n\r\n    /**\r\n    * @param {FhirMetadata} metadata\r\n    */\r\n    set metadata(metadata) {\r\n        this._shadow.getElementById(\"resourceTypes\").metadata = metadata;\r\n        this._shadow.getElementById(\"serverDetails\").metadata = metadata;\r\n    }\r\n\r\n});\r\n\r\nconst FhirMetadataTemplate = document.createElement('template');\r\nFhirMetadataTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            display:flex;\r\n            flex-direction: column;\r\n            height : 100%;\r\n        }\r\n        #tabs {\r\n            border-bottom:1px solid var(--border-color, gray);\r\n        }\r\n        #resourceTypes, #serverDetails {\r\n            flex:1 1 auto;\r\n            overflow: auto;\r\n            height:0;\r\n        }\r\n    </style>\r\n    <main>\r\n        <app-tabs id=\"tabs\">\r\n            <app-tab id=\"tabResources\" selected>Resource Types</app-tab>\r\n            <app-tab id=\"tabDetails\">Details</app-tab>\r\n        </app-tabs>\r\n        <fhir-resource-types id=\"resourceTypes\"></fhir-resource-types>\r\n        <fhir-server-details id=\"serverDetails\" hidden></fhir-server-details>\r\n    </main>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirMetadata.js?");

/***/ }),

/***/ "./src/fhirResource.js":
/*!*****************************!*\
  !*** ./src/fhirResource.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appBar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appBar.js */ \"./src/appBar.js\");\n/* harmony import */ var _appBar_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appBar_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appRoundButton.js */ \"./src/appRoundButton.js\");\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_appRoundButton_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _appTab_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appTab.js */ \"./src/appTab.js\");\n/* harmony import */ var _appTab_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_appTab_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _appTabs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./appTabs.js */ \"./src/appTabs.js\");\n/* harmony import */ var _appTabs_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_appTabs_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _fhirResourceJson_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fhirResourceJson.js */ \"./src/fhirResourceJson.js\");\n/* harmony import */ var _fhirResourceJson_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_fhirResourceJson_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _fhirResourceHtml_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fhirResourceHtml.js */ \"./src/fhirResourceHtml.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncustomElements.define('fhir-resource', class FhirResource extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirResourceTemplate.content.cloneNode(true));\r\n        this._resourceType = null;\r\n        this._resourceId = null;\r\n    }\r\n    connectedCallback() {\r\n        this._shadow.getElementById(\"back\").addEventListener('click', () => {\r\n            this.dispatchEvent(new CustomEvent(\"back\", {\r\n                bubbles: false,\r\n                cancelable: false\r\n            }));\r\n        });\r\n\r\n        this._shadow.getElementById(\"help\").addEventListener('click', () => {\r\n            window.open(`${this._resourceType.profile}#resource`, \"FhirBrowserHelp\");\r\n        });\r\n\r\n        this._shadow.getElementById('download').addEventListener(\"click\", () => {\r\n            const file = new File([JSON.stringify(this._resource)], this._resource.id, {\r\n                type: 'data:text/json;charset=utf-8',\r\n            });\r\n            const url = URL.createObjectURL(file);\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.download = `${this._resourceType.type}#${file.name}.json`;\r\n            this._shadow.appendChild(link);\r\n            link.click();\r\n            this._shadow.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n        });\r\n\r\n        this._shadow.getElementById('copy').addEventListener(\"click\", () => {\r\n            navigator.clipboard.writeText(JSON.stringify(this._resource)).then(function () {\r\n                console.log('Async: Copying to clipboard was successful!');\r\n            }, function (err) {\r\n                console.error('Async: Could not copy text: ', err);\r\n            });\r\n        });\r\n\r\n        this._shadow.getElementById('share').addEventListener(\"click\", () => {\r\n            const fileName = `${this._resourceType.type}.${this._resource.id}.txt`;\r\n            const file = new File([JSON.stringify(this._resource)], fileName, { type: 'text/plain' });\r\n            navigator.share({\r\n                \"title\": fileName,\r\n                \"files\": [file]\r\n            }).then(() => {\r\n                console.log('sharing was successful!');\r\n            }, (err) => {\r\n                console.error('Could not share resource: ', err);\r\n            });;\r\n        });\r\n\r\n        this._shadow.getElementById(\"tabs\").addEventListener('click', ({ detail }) => {\r\n            const tabId = detail.tabId;\r\n            this._shadow.getElementById(\"jsonView\").hidden = (tabId !== 'tabJson');\r\n            this._shadow.getElementById(\"htmlView\").hidden = (tabId !== 'tabHtml');\r\n        });\r\n    }\r\n\r\n    load({ server, resourceType, resourceId }) {\r\n        this._resourceType = resourceType;\r\n        this._resourceId = resourceId;\r\n\r\n        const header = this._shadow.getElementById('header');\r\n        const tabs = this._shadow.getElementById('tabs');\r\n        const jsonView = this._shadow.getElementById('jsonView');\r\n        const htmlView = this._shadow.getElementById('htmlView');\r\n        const shareBtn = this._shadow.getElementById(\"share\");\r\n        const copyBtn = this._shadow.getElementById(\"copy\");\r\n        const downloadBtn = this._shadow.getElementById(\"download\");\r\n\r\n        this._shadow.getElementById('title').innerText = resourceType.type;\r\n        this.fetchResource(server, resourceType, resourceId).then(resource => {\r\n            header.classList.remove('error');\r\n            this._shadow.getElementById(\"error\").hidden = true;\r\n            tabs.hidden = false;\r\n            tabs.select('tabJson');\r\n            this._resource = resource;\r\n            jsonView.source = resource;\r\n            htmlView.source = resource;\r\n            shareBtn.hidden = false;\r\n            copyBtn.hidden = false;\r\n            downloadBtn.hidden = false;\r\n        }).catch((e) => {\r\n            header.classList.add('error');\r\n            const error = this._shadow.getElementById(\"error\");\r\n            error.hidden = false;\r\n            error.innerText = e;\r\n            tabs.hidden = true;\r\n            jsonView.hidden = true;\r\n            htmlView.hidden = true;\r\n            this._resource = null;\r\n            shareBtn.hidden = true;\r\n            copyBtn.hidden = true;\r\n            downloadBtn.hidden = true;\r\n        });\r\n    }\r\n\r\n    async fetchResource(server, resourceType, id) {\r\n        const response = await fetch(`${server.url}/${resourceType.type}/${id}?_format=json`, {\r\n            \"headers\": server.headers\r\n        });\r\n        return response.json();\r\n    }\r\n\r\n});\r\n\r\nconst FhirResourceTemplate = document.createElement('template');\r\nFhirResourceTemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"./material.css\">\r\n    <style>\r\n        #wrapper {\r\n            display:flex;\r\n            flex-direction: column;\r\n            height : 100%;\r\n        }\r\n        #title {\r\n            margin:0;\r\n        }\r\n        #tabs {\r\n            border-bottom:1px solid var(--border-color, gray);\r\n        }\r\n        #jsonView {\r\n            flex:1 1 auto;\r\n            height:0;\r\n        }\r\n        #htmlView {\r\n            flex:1 1 auto;\r\n            height:0;\r\n        }\r\n        #header.error {\r\n            background-color: var(--background-error, transparent);\r\n            color: white;\r\n        }\r\n        #error {\r\n            padding: 1em;\r\n        }\r\n    </style>\r\n    <div id=\"wrapper\">\r\n        <app-bar id=\"header\">\r\n            <app-round-button slot=\"left\" id=\"back\" title=\"back\" app-icon=\"arrow_back\"></app-round-button>\r\n            <h3 slot=\"middle\" id=\"title\"></h3>\r\n            <app-round-button slot=\"right\" id=\"share\" title=\"Share\" app-icon=\"share\"></app-round-button>\r\n            <app-round-button slot=\"right\" id=\"copy\" title=\"Copy to clipboard\" app-icon=\"content_copy\"></app-round-button>\r\n            <app-round-button slot=\"right\" id=\"download\" title=\"Download\" app-icon=\"download\"></app-round-button>\r\n            <app-round-button slot=\"right\" id=\"help\" title=\"Help\" app-icon=\"help\"></app-round-button>\r\n        </app-bar>\r\n        <app-tabs id=\"tabs\">\r\n            <app-tab id=\"tabJson\" selected>Json</app-tab>\r\n            <app-tab id=\"tabHtml\">Html</app-tab>\r\n        </app-tabs>\r\n        <fhir-resource-json id=\"jsonView\"></fhir-resource-json>\r\n        <fhir-resource-html id=\"htmlView\" hidden></fhir-resource-html>\r\n        <span id=\"error\"></span>\r\n    </div>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirResource.js?");

/***/ }),

/***/ "./src/fhirResourceHtml.js":
/*!*********************************!*\
  !*** ./src/fhirResourceHtml.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mustache */ \"../../../node_modules/mustache/mustache.mjs\");\n\r\n\r\ncustomElements.define('fhir-resource-html', class FhirResourceHtml extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirResourceHtmlTemplate.content.cloneNode(true));\r\n    }\r\n\r\n    /**\r\n     * @param {Object} resource\r\n     */\r\n    set source(resource) {\r\n        let result = \"<i>Work in progress</i>\";\r\n        if (resource.resourceType === 'Binary') {\r\n            result = parseBinary();\r\n        }\r\n        this._shadow.getElementById('content').innerHTML = result;\r\n\r\n        function parseBinary() {\r\n            const templates = {\r\n                \"image\": `<img src=\"data:{{contentType}};base64,{{data}}\"/>`,\r\n                \"xml\": `<label>Id: </label><span>{{id}}</span><br/>\r\n                            <label>Version: </label><span>{{meta.versionId}}</span><br/>\r\n                            <label>lastUpdated: </label><span>{{meta.lastUpdated}}</span><br/>\r\n                            <pre><code>{{data}}</code></pre>`,\r\n                \"default\": `<label>Id: </label><span>{{id}}</span><br/>\r\n                            <label>Version: </label><span>{{meta.versionId}}</span><br/>\r\n                            <label>lastUpdated: </label><span>{{meta.lastUpdated}}</span><br/>\r\n                            <pre>{{data}}</pre>`,\r\n            }\r\n            let template = templates.default;\r\n            let source = Object.assign({}, resource);\r\n            if (source.data) {\r\n                switch (resource.contentType) {\r\n                    case 'application/xml':\r\n                        template = templates.xml;\r\n                        source.data = window.atob(source.data);\r\n                        break;\r\n                    case 'image/jpeg':\r\n                    case 'image/png':\r\n                    case 'image/webp':\r\n                    case 'image/tiff':\r\n                        template = templates.image;\r\n                        break;\r\n                    case 'text/plain':\r\n                    default:\r\n                        source.data = window.atob(source.data);\r\n                }\r\n            }\r\n            return mustache__WEBPACK_IMPORTED_MODULE_0__[\"default\"].render(template, source);\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst FhirResourceHtmlTemplate = document.createElement('template');\r\nFhirResourceHtmlTemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"./material.css\">\r\n    <style>\r\n        main {\r\n            display:flex;\r\n            flex-direction:column;\r\n            height:100%;\r\n        }\r\n        #content {\r\n            padding: 1em;\r\n            flex: 1 1 auto;\r\n            height:0;\r\n            overflow: auto;\r\n            min-width: 50%;\r\n        }\r\n        #content pre {\r\n            background-color:#fff;\r\n            border-radius: 4px;\r\n            box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\r\n            font-family: monospace;\r\n            padding: 0.5em;\r\n            color: black;\r\n            overflow:auto;\r\n        }\r\n        #content img {\r\n            background-color:#fff;\r\n            border-radius: 4px;\r\n            box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\r\n            max-width: 100%;\r\n        }\r\n    </style>\r\n    <main>\r\n        <div id=\"content\"></div>\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirResourceHtml.js?");

/***/ }),

/***/ "./src/fhirResourceJson.js":
/*!*********************************!*\
  !*** ./src/fhirResourceJson.js ***!
  \*********************************/
/***/ (() => {

eval("customElements.define('fhir-resource-json', class FhirResourceJson extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirResourceJsonTemplate.content.cloneNode(true));\r\n    }\r\n    /**\r\n     * @param {object} resource\r\n     */\r\n    set source(resource) {\r\n        const content = this._shadow.getElementById(\"content\");\r\n        while (content.firstChild) content.removeChild(content.lastChild);\r\n        content.scrollTo(0, 0);\r\n        parse(content, resource);\r\n        function parse(parent, obj) {\r\n            let isArray = Array.isArray(obj);\r\n            parent.appendChild(document.createTextNode(isArray ? '[' : '{'));\r\n            let dl = document.createElement('dl');\r\n            for (const [key, value] of Object.entries(obj)) {\r\n                const dt = document.createElement('dt');\r\n                if (!isArray) {\r\n                    const elm = document.createElement('span');\r\n                    elm.innerText = `\"${key}\"`;\r\n                    dt.appendChild(elm);\r\n                    dt.appendChild(document.createTextNode(\": \"));\r\n                }\r\n                if (typeof value === 'object') {\r\n                    parse(dt, value);\r\n                } else {\r\n                    const elm = document.createElement('span');\r\n                    elm.innerText = (typeof (value) === 'string' ? `\"${value}\"` : value);\r\n                    dt.appendChild(elm);\r\n                }\r\n                const prev = dl.lastElementChild;\r\n                if (prev && prev.nodeName == dt.nodeName) {\r\n                    prev.appendChild(document.createTextNode(\",\"));\r\n                }\r\n                dl.appendChild(dt);\r\n            }\r\n            parent.appendChild(dl);\r\n            parent.appendChild(document.createTextNode(isArray ? ']' : '}'));\r\n        }\r\n    }\r\n});\r\n\r\nconst FhirResourceJsonTemplate = document.createElement('template');\r\nFhirResourceJsonTemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"./material.css\">\r\n    <style>\r\n        main {\r\n            display:flex;\r\n            flex-direction:column;\r\n            height:100%;\r\n        }\r\n        #content {\r\n            background-color: var(--background-color, inherit);\r\n            color: var(--text-color-normal, black);\r\n            flex: 1 1 auto;\r\n            font-family: monospace;\r\n            height:0;\r\n            overflow: auto;\r\n            padding: 1em;\r\n            white-space: nowrap;\r\n        }\r\n        dl {\r\n            margin: 0;\r\n            padding-left: 1.5em;\r\n        }\r\n        dt {\r\n            list-style-type: none;\r\n        }\r\n        span:first-of-type {\r\n            color: var(--json-viewer-properties-color, black);\r\n        }\r\n        span {\r\n            color: var(--json-viewer-values-color, black);\r\n        }\r\n    </style>\r\n    <main>\r\n        <div id=\"content\"></div>\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirResourceJson.js?");

/***/ }),

/***/ "./src/fhirResourceTypes.js":
/*!**********************************!*\
  !*** ./src/fhirResourceTypes.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _fhirResourceTypesFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fhirResourceTypesFilter.js */ \"./src/fhirResourceTypesFilter.js\");\n/* harmony import */ var _fhirResourceTypesFilter_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_fhirResourceTypesFilter_js__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\ncustomElements.define('fhir-resource-types', class FhirResourceTypes extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirResourceTypesTemplate.content.cloneNode(true));\r\n        this._metadata = null;\r\n    }\r\n\r\n    connectedCallback() {\r\n        this._shadow.getElementById('filter').addEventListener(\"filterChanged\", ({ detail }) => {\r\n            const ul = this._shadow.getElementById('list').firstElementChild;\r\n            const filter = detail.text.toLowerCase();\r\n            ul.childNodes.forEach(li => {\r\n                li.hidden = !li.innerText.toLowerCase().startsWith(filter);\r\n            });\r\n        });\r\n\r\n        this._shadow.getElementById('list').onclick = ({ target }) => {\r\n            if (target.nodeName === 'LI') {\r\n                let prev = this._shadow.querySelector(\".selected\");\r\n                if (prev) {\r\n                    prev.classList.remove('selected');\r\n                }\r\n                target.classList.add('selected');\r\n                this.dispatchEvent(new CustomEvent(\"resourceTypeSelected\", {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    'detail': {\r\n                        resourceType: this._metadata.rest[0].resource.filter(res => res.type === target.dataset.type)[0]\r\n                    }\r\n                }));\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param {object} metadata\r\n     */\r\n    set metadata(metadata) {\r\n        this._metadata = metadata;\r\n        this._shadow.getElementById('filter').clear();\r\n        const list = this._shadow.getElementById('list');\r\n        list.scrollTop = 0;\r\n        const ul = list.firstElementChild;\r\n        while (ul.firstChild) {\r\n            ul.removeChild(ul.lastChild);\r\n        }\r\n\r\n        metadata.rest[0].resource.forEach(resource => {\r\n            const li = document.createElement('li');\r\n            li.setAttribute(\"data-type\", resource.type);\r\n            li.innerHTML = resource.type;\r\n            ul.appendChild(li);\r\n        })\r\n    }\r\n\r\n});\r\n\r\nconst FhirResourceTypesTemplate = document.createElement('template');\r\nFhirResourceTypesTemplate.innerHTML = `\r\n    <link href=\"./material.css\" rel=\"stylesheet\"/>\r\n    <style>\r\n        main {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height:100%;\r\n        }\r\n        #list {\r\n            flex:1 1 auto;\r\n            height:0;\r\n            overflow:auto;\r\n        }\r\n        ul {\r\n            list-style: none;\r\n            padding: 0;\r\n            margin: 0;\r\n        }\r\n        li {\r\n            cursor: pointer;\r\n            padding: 0.3em 1em;\r\n        }\r\n        li:hover, li.selected {\r\n            background-color:var(--hover-color, lightgray);\r\n        }\r\n    </style>\r\n    <main>\r\n        <fhir-resource-types-filter id=\"filter\"></fhir-resource-types-filter>\r\n        <div id=\"list\"><ul></ul></div>\r\n    </main>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirResourceTypes.js?");

/***/ }),

/***/ "./src/fhirResourceTypesFilter.js":
/*!****************************************!*\
  !*** ./src/fhirResourceTypesFilter.js ***!
  \****************************************/
/***/ (() => {

eval("customElements.define('fhir-resource-types-filter', class FhirResourceTypesFilter extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirResourceTypesFilterTemplate.content.cloneNode(true));\r\n    }\r\n    connectedCallback() {\r\n        const text = this._shadow.getElementById(\"text\");\r\n        this._shadow.getElementById(\"clear\").addEventListener('click', () => {\r\n            if (text.value) {\r\n                text.value = '';\r\n                fireChange.call(this);\r\n            }\r\n        });\r\n        this._shadow.querySelector(\"main\").addEventListener('mousedown', (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            text.focus();\r\n        });\r\n        text.addEventListener(\"input\", fireChange.bind(this));\r\n        function fireChange(event) {\r\n            this.dispatchEvent(new CustomEvent(\"filterChanged\", {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                'detail': {\r\n                    'text': text.value\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    clear() {\r\n        this._shadow.getElementById(\"clear\").click();\r\n    }\r\n});\r\n\r\nconst FhirResourceTypesFilterTemplate = document.createElement('template');\r\nFhirResourceTypesFilterTemplate.innerHTML = `\r\n    <link href=\"./material.css\" rel=\"stylesheet\"/>\r\n    <style>\r\n        main {\r\n            background-color: rgba(var(--text-color, black), 4%);\r\n            border: 1px solid transparent;\r\n            display: flex;\r\n            padding: 0.7em;\r\n            font-size: smaller;\r\n        }\r\n        main:focus-within {\r\n            border-bottom-color: var(--primary-color, black);\r\n        }\r\n        #text {\r\n            background: none;\r\n            border: 0 none;\r\n            color: var(--text-color-normal);\r\n            flex: 1 1 auto;\r\n            font-family: inherit;\r\n            font-size: inherit;\r\n        }\r\n        #text:focus {\r\n            outline: none;\r\n        }\r\n        #clear {\r\n            cursor: pointer;\r\n            font-size: inherit;\r\n            line-height: unset;\r\n        }\r\n    </style>\r\n    <main>\r\n        <input id=\"text\" type=\"text\" placeholder=\"Type to filter\"/>\r\n        <i id=\"clear\" class=\"material-icons\" title=\"clear\">close</i>\r\n    </main>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirResourceTypesFilter.js?");

/***/ }),

/***/ "./src/fhirSearch.js":
/*!***************************!*\
  !*** ./src/fhirSearch.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appRoundButton.js */ \"./src/appRoundButton.js\");\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appRoundButton_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _appListItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appListItem.js */ \"./src/appListItem.js\");\n/* harmony import */ var _appListItem_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_appListItem_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _appPreferences_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appPreferences.js */ \"./src/appPreferences.js\");\n\r\n\r\n\r\n\r\ncustomElements.define('fhir-search', class FhirSearch extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirSearchTemplate.content.cloneNode(true));\r\n    }\r\n\r\n    connectedCallback() {\r\n        const content = this._shadow.getElementById(\"content\");\r\n        this._shadow.querySelector(\"main\").addEventListener(\"click\", () => {\r\n            this.hidden = true;\r\n        });\r\n        this._shadow.getElementById('close').addEventListener(\"click\", () => {\r\n            this.hidden = true;\r\n        });\r\n        this._shadow.querySelector(\".surface\").addEventListener(\"click\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this._shadow.getElementById(\"clear\").addEventListener(\"click\", () => {\r\n            const fields = content.querySelectorAll(\"input\");\r\n            fields.forEach(field => {\r\n                field.value = \"\"\r\n            });\r\n        });\r\n        this._shadow.getElementById(\"apply\").addEventListener(\"click\", () => {\r\n            const fields = content.querySelectorAll(\"input\");\r\n            let parameters = {};\r\n            fields.forEach(field => {\r\n                if (field.value) {\r\n                    parameters[field.name] = { \"value\": field.value, \"modifier\": \"\" };\r\n                }\r\n            });\r\n            this.dispatchEvent(new CustomEvent(\"apply\", {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                \"detail\": {\r\n                    \"parameters\": parameters\r\n                }\r\n            }));\r\n            this.hidden = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {any} metadata\r\n     */\r\n    set metadata(metadata) {\r\n        const content = this._shadow.getElementById(\"content\");\r\n\r\n        while (content.firstChild) content.removeChild(content.lastChild);\r\n\r\n        /**\r\n         *  <div class=\"item\">\r\n         *    <div class=\"field\">\r\n         *       <label for=\"\"></label>\r\n         *       <input type=\"\"></input>\r\n         *    </div>\r\n         *    <span></span>\r\n         *  </div>\r\n         **/\r\n        const sorted = metadata.searchParam.sort((s1, s2) => s1.name < s2.name ? -1 : s1.name > s2.name ? 1 : 0);\r\n        sorted.forEach(search => {\r\n            if (\"string\" === search.type) {\r\n                const itm = document.createElement('div');\r\n                itm.className = \"item\";\r\n                content.appendChild(itm);\r\n\r\n                const field = document.createElement('div');\r\n                field.className = \"field\";\r\n                itm.appendChild(field);\r\n\r\n                const lbl = document.createElement('label');\r\n                lbl.setAttribute(\"for\", search.name);\r\n                lbl.innerText = search.name;\r\n                content.appendChild(lbl);\r\n                field.appendChild(lbl);\r\n\r\n                const txt = document.createElement('input');\r\n                txt.setAttribute(\"name\", search.name);\r\n                txt.setAttribute(\"type\", \"text\");\r\n                field.appendChild(txt);\r\n\r\n\r\n                const hlp = document.createElement('span');\r\n                hlp.innerText = search.documentation;\r\n                content.appendChild(hlp);\r\n                itm.appendChild(hlp);\r\n            }\r\n        });\r\n    }\r\n\r\n});\r\n\r\nconst FhirSearchTemplate = document.createElement('template');\r\nFhirSearchTemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"./material.css\">\r\n    <style>\r\n        main {\r\n            position: absolute;\r\n            top: 0;\r\n            left:0;\r\n            background-color: rgba(0,0,0,32%);\r\n            min-height: 100%;\r\n            min-width: 100%;\r\n        }\r\n        .surface {\r\n            background-color: var(--background-color, white);\r\n            border-radius: 4px;\r\n            height: 50%;\r\n            width: 50%;\r\n            position: absolute;\r\n            top: 60px;\r\n            right: 1em;\r\n        }\r\n        .overlay {\r\n            background-color: rgba(255,255,255,4%);\r\n            color:var(--text-color-normal, white);\r\n            display:flex;\r\n            flex-direction: column;\r\n            font-family: Roboto, Arial, monospace;\r\n            height: 100%;\r\n        }\r\n        app-bar {\r\n        }\r\n        #content {\r\n            border-bottom: 1px solid var(--border-color);\r\n            border-top: 1px solid var(--border-color);\r\n            overflow: auto;\r\n            flex: 1 1 auto;\r\n            height: 0;\r\n            padding: 1em;\r\n        }\r\n        #actions {\r\n            padding: 0.5em 1em;\r\n            text-align: center;\r\n            overflow: hidden;\r\n        }\r\n        #actions input[type=button] {\r\n            background: none;\r\n            border: 1px solid var(--primary-color);\r\n            border-radius: 4px;\r\n            color: var(--primary-color);\r\n            cursor: pointer;\r\n            font: inherit;\r\n            padding: 5px 16px;\r\n            text-transform: uppercase;\r\n        }\r\n        #actions input[type=button]:hover {\r\n            background-color: var(--hover-color);\r\n        }\r\n        div.item {\r\n            display:flex;\r\n            flex-direction: column;\r\n            margin-bottom: 0.5em;\r\n        }\r\n        div.item span {\r\n            color: var(-text-color-disabled);\r\n            font-size: small;\r\n            padding-left: 1em;\r\n        }\r\n        div.item:focus-within {\r\n            border-color: var(--primary-color);\r\n        }\r\n        div.item:focus-within label {\r\n            color: var(--primary-color);\r\n        }\r\n        div.item:focus-within input {\r\n            border-color: var(--primary-color);\r\n        }\r\n        div.field {\r\n            background-color: var(--hover-color);\r\n            border-bottom: 1px solid gray;\r\n            display: flex;\r\n            position: relative;\r\n        }\r\n        div.field label {\r\n            left: 1em;\r\n            position: absolute;\r\n            top: 0.2em;\r\n            font-size: smaller;\r\n        }\r\n        div.field input {\r\n            padding: 25px 1em 5px 1em;\r\n            flex: auto;\r\n            border: 0 none;\r\n            background: none;\r\n            font: inherit;\r\n            border-bottom: 1px solid transparent;\r\n            color: var(--text-color-normal);\r\n        }\r\n        div.field input:focus {\r\n            outline: none;\r\n        }\r\n        @media (max-width:480px){\r\n            .surface {\r\n                top:0;\r\n                left:0;\r\n                height: 100%;\r\n                width:100%;\r\n                max-width: unset;\r\n                max-height: unset;\r\n            }\r\n            .overlay {\r\n                background-color: transparent;\r\n            }\r\n        }\r\n    </style>\r\n    <main>\r\n        <div class=\"surface\">\r\n            <div class=\"overlay\">\r\n                <app-bar id=\"header\">\r\n                    <app-round-button id=\"close\" title=\"Close\" app-icon=\"close\" slot=\"left\"></app-round-button>\r\n                    <h3 id=\"title\" slot=\"middle\">Search</h3>\r\n                    <app-round-button id=\"clear\" title=\"Clear\" app-icon=\"clear_all\" slot=\"right\"></app-round-button>\r\n                </app-bar>\r\n                <div id=\"content\"></div>\r\n                <div id=\"actions\">\r\n                    <input type=\"button\" id=\"apply\" value=\"Apply\"></input>\r\n                <div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirSearch.js?");

/***/ }),

/***/ "./src/fhirServer.js":
/*!***************************!*\
  !*** ./src/fhirServer.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appRoundButton.js */ \"./src/appRoundButton.js\");\n/* harmony import */ var _appRoundButton_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appRoundButton_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _appListItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appListItem.js */ \"./src/appListItem.js\");\n/* harmony import */ var _appListItem_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_appListItem_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _appPreferences_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appPreferences.js */ \"./src/appPreferences.js\");\n\r\n\r\n\r\n\r\ncustomElements.define('fhir-server', class FhirServer extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirServerTemplate.content.cloneNode(true));\r\n    }\r\n    connectedCallback() {\r\n        const content = this._shadow.getElementById('content');\r\n        this._shadow.getElementById('close').addEventListener(\"click\", () => {\r\n            this.hidden = true;\r\n        });\r\n        this._shadow.querySelector(\"main\").addEventListener(\"click\", () => {\r\n            this.hidden = true;\r\n        });\r\n        this._shadow.querySelector('.surface').addEventListener(\"click\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        content.addEventListener(\"click\", ({ target }) => {\r\n            const row = target.closest(\"app-list-item\");\r\n            if (row) {\r\n                const prev = content.querySelector(\".selected\");\r\n                if (prev) prev.classList.remove('selected');\r\n                row.classList.add('selected');\r\n                this.serverChanged(row.dataset.id);\r\n                this.hidden = true;\r\n            }\r\n        });\r\n\r\n        this.loadConf().then(conf => {\r\n            this._conf = conf;\r\n            const preferedServer = _appPreferences_js__WEBPACK_IMPORTED_MODULE_2__.Preferences.get(\"server\");\r\n            const content = this._shadow.getElementById('content');\r\n            for (const key of Object.keys(conf).sort()) {\r\n                const row = document.createElement('app-list-item');\r\n                row.setAttribute(\"data-id\", key);\r\n                if (key === preferedServer) row.classList.add(\"selected\");\r\n                const title = document.createElement(\"span\");\r\n                title.appendChild(document.createTextNode(key));\r\n                title.slot = \"title\";\r\n                row.appendChild(title);\r\n                const subTitle = document.createElement(\"span\");\r\n                subTitle.appendChild(document.createTextNode(this._conf[key].url));\r\n                subTitle.slot = \"subTitle\";\r\n                row.appendChild(subTitle);\r\n                content.appendChild(row);\r\n            }\r\n            if (preferedServer != null) {\r\n                this.serverChanged(preferedServer);\r\n            } else {\r\n                this.hidden = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    serverChanged(serverKey) {\r\n        const server = this._conf[serverKey];\r\n        this.connect(server);\r\n\r\n        this.dispatchEvent(new CustomEvent(\"serverchanged\", {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            \"detail\": {\r\n                \"serverCode\": serverKey,\r\n                \"server\": server\r\n            }\r\n        }));\r\n\r\n        _appPreferences_js__WEBPACK_IMPORTED_MODULE_2__.Preferences.set(\"server\", serverKey);\r\n    }\r\n\r\n    connect(server) {\r\n        if (server.auth) {\r\n            switch (server.auth.method) {\r\n                case \"oauth2\":\r\n                    this.oauth2_getToken(server.auth.setup).then(response => {\r\n                        if (!server.headers) server.headers = {};\r\n                        server.headers.Authorization = `${response.token_type} ${response.access_token}`;\r\n                    });\r\n                    break;\r\n                case \"basic\":\r\n                    let auth = btoa(`${server.auth.setup.username}:${server.auth.setup.password}`);\r\n                    server.headers.Authorization = `Basic ${auth}`;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    async oauth2_getToken(setup) {\r\n        let urlParams = {\r\n            \"client_id\": setup.client_id,\r\n            \"client_secret\": setup.client_secret,\r\n            \"grant_type\": setup.grant_type,\r\n            \"username\": setup.username,\r\n            \"password\": setup.password\r\n        }\r\n        let result = new URLSearchParams(urlParams);\r\n        const response = await fetch(setup.access_token_url, {\r\n            \"headers\": {\r\n                \"Content-type\": \"application/x-www-form-urlencoded\"\r\n            },\r\n            \"method\": \"POST\",\r\n            \"body\": result.toString()\r\n        });\r\n        return response.json();\r\n    }\r\n\r\n    async loadConf() {\r\n        let conf = localStorage.getItem('conf');\r\n        if (conf === null) {\r\n            return await fetch(`./default.conf`, { \"cache\": \"reload\" })\r\n                .then(response => response.json())\r\n                .then(conf => {\r\n                    localStorage.setItem('conf', JSON.stringify(conf));\r\n                    return conf;\r\n                });\r\n        } else {\r\n            return JSON.parse(conf);\r\n        }\r\n    }\r\n});\r\n\r\nconst FhirServerTemplate = document.createElement('template');\r\nFhirServerTemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"./material.css\">\r\n    <style>\r\n        main {\r\n            position: absolute;\r\n            top: 0;\r\n            left:0;\r\n            background-color: rgba(0,0,0,32%);\r\n            min-height: 100%;\r\n            min-width: 100%;\r\n        }\r\n        .surface {\r\n            background-color: var(--background-color, white);\r\n            border-radius: 4px;\r\n            height: 50%;\r\n            min-width: 20%;\r\n            position: absolute;\r\n            top: 60px;\r\n            right: 1em;\r\n        }\r\n        .overlay {\r\n            background-color: rgba(255,255,255,4%);\r\n            color:var(--text-color-normal, white);\r\n            display:flex;\r\n            flex-direction: column;\r\n            font-family: Roboto, Arial, monospace;\r\n            height: 100%;\r\n        }\r\n        app-bar {\r\n            border-bottom: 1px solid var(--border-color);\r\n        }\r\n        #content {\r\n            overflow:auto;\r\n            flex: 1 1 auto;\r\n            height: 0;\r\n        }\r\n        app-list-item {\r\n            cursor: pointer;\r\n        }\r\n        app-list-item.selected {\r\n            background-color: var(--hover-color, rgba(0, 0, 0, 5%));\r\n        }\r\n        #actions {\r\n            border-top: 1px solid var(--border-color);\r\n            padding: 0.5em 1em;\r\n            text-align: center;\r\n            overflow: hidden;\r\n        }\r\n        #actions input[type=button] {\r\n            background: none;\r\n            border: 1px solid var(--primary-color);\r\n            border-radius: 4px;\r\n            color: var(--primary-color);\r\n            cursor: pointer;\r\n            font: inherit;\r\n            padding: 5px 16px;\r\n            text-transform: uppercase;\r\n        }\r\n        #actions input[type=button]:hover {\r\n            background-color: var(--hover-color);\r\n        }\r\n        @media (max-width:480px){\r\n            .surface {\r\n                top:0;\r\n                left:0;\r\n                height: 100%;\r\n                width:100%;\r\n                max-width: unset;\r\n                max-height: unset;\r\n            }\r\n            .overlay {\r\n                background-color: transparent;\r\n            }\r\n        }\r\n    </style>\r\n    <main>\r\n        <div class=\"surface\">\r\n            <div class=\"overlay\">\r\n                <app-bar id=\"header\">\r\n                    <app-round-button id=\"close\" title=\"Close\" app-icon=\"close\" slot=\"left\"></app-round-button>\r\n                    <h3 id=\"title\" slot=\"middle\">Connections</h3>\r\n                </app-bar>\r\n                <div id=\"content\"></div>\r\n                <div id=\"actions\">\r\n                    <input type=\"button\" value=\"New connection\"></input>\r\n                <div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n`;\r\n\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirServer.js?");

/***/ }),

/***/ "./src/fhirServerDetails.js":
/*!**********************************!*\
  !*** ./src/fhirServerDetails.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _appListItem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appListItem.js */ \"./src/appListItem.js\");\n/* harmony import */ var _appListItem_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_appListItem_js__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\ncustomElements.define('fhir-server-details', class FhirServerDetails extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._shadow = this.attachShadow({ mode: 'closed' });\r\n        this._shadow.appendChild(FhirServerDetailsTemplate.content.cloneNode(true));\r\n    }\r\n\r\n    /**\r\n     * @param {object} metadata\r\n     */\r\n    set metadata(metadata) {\r\n        const wrapper = this._shadow.querySelector(\"main\");\r\n        while (wrapper.firstChild) wrapper.removeChild(wrapper.lastChild);\r\n\r\n        make(\"copyright\", metadata.copyright);\r\n        make(\"description\", metadata.description);\r\n        make(\"fhirVersion\", metadata.fhirVersion);\r\n        if (metadata.implementation) {\r\n            make(\"implementation description\", metadata.implementation.description);\r\n            make(\"implementation name\", metadata.implementation.name);\r\n            make(\"implementation url\", metadata.implementation.url);\r\n        }\r\n        make(\"language\", metadata.language);\r\n        make(\"name\", metadata.name);\r\n        make(\"publisher\", metadata.publisher);\r\n        if (metadata.software) {\r\n            make(\"software name\", metadata.software.name);\r\n            make(\"software version\", metadata.software.version);\r\n            make(\"software release date\", metadata.software.releaseDate);\r\n        }\r\n        function make(name, value) {\r\n            if (typeof value === \"undefined\") return;\r\n\r\n            const row = document.createElement('app-list-item');\r\n            const title = document.createElement(\"span\");\r\n            title.appendChild(document.createTextNode(name));\r\n            title.slot = \"title\";\r\n            row.appendChild(title);\r\n            const subTitle = document.createElement(\"span\");\r\n            subTitle.appendChild(document.createTextNode(value));\r\n            subTitle.slot = \"subTitle\";\r\n            row.appendChild(subTitle);\r\n            wrapper.appendChild(row);\r\n        }\r\n    }\r\n\r\n});\r\n\r\nconst FhirServerDetailsTemplate = document.createElement('template');\r\nFhirServerDetailsTemplate.innerHTML = `\r\n    <style>\r\n        main {\r\n            overflow-y: auto;\r\n        }\r\n    </style>\r\n    <main/>\r\n`;\n\n//# sourceURL=webpack://fhirbrowser/./src/fhirServerDetails.js?");

/***/ }),

/***/ "../../../node_modules/mustache/mustache.mjs":
/*!***************************************************!*\
  !*** ../../../node_modules/mustache/mustache.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\nvar objectToString = Object.prototype.toString;\nvar isArray = Array.isArray || function isArrayPolyfill (object) {\n  return objectToString.call(object) === '[object Array]';\n};\n\nfunction isFunction (object) {\n  return typeof object === 'function';\n}\n\n/**\n * More correct typeof string handling array\n * which normally returns typeof 'object'\n */\nfunction typeStr (obj) {\n  return isArray(obj) ? 'array' : typeof obj;\n}\n\nfunction escapeRegExp (string) {\n  return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Null safe way of checking whether or not an object,\n * including its prototype, has a given property\n */\nfunction hasProperty (obj, propName) {\n  return obj != null && typeof obj === 'object' && (propName in obj);\n}\n\n/**\n * Safe way of detecting whether or not the given thing is a primitive and\n * whether it has the given property\n */\nfunction primitiveHasOwnProperty (primitive, propName) {\n  return (\n    primitive != null\n    && typeof primitive !== 'object'\n    && primitive.hasOwnProperty\n    && primitive.hasOwnProperty(propName)\n  );\n}\n\n// Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n// See https://github.com/janl/mustache.js/issues/189\nvar regExpTest = RegExp.prototype.test;\nfunction testRegExp (re, string) {\n  return regExpTest.call(re, string);\n}\n\nvar nonSpaceRe = /\\S/;\nfunction isWhitespace (string) {\n  return !testRegExp(nonSpaceRe, string);\n}\n\nvar entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nfunction escapeHtml (string) {\n  return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n    return entityMap[s];\n  });\n}\n\nvar whiteRe = /\\s*/;\nvar spaceRe = /\\s+/;\nvar equalsRe = /\\s*=/;\nvar curlyRe = /\\s*\\}/;\nvar tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n/**\n * Breaks up the given `template` string into a tree of tokens. If the `tags`\n * argument is given here it must be an array with two string values: the\n * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n * course, the default is to use mustaches (i.e. mustache.tags).\n *\n * A token is an array with at least 4 elements. The first element is the\n * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n * all text that appears outside a symbol this element is \"text\".\n *\n * The second element of a token is its \"value\". For mustache tags this is\n * whatever else was inside the tag besides the opening symbol. For text tokens\n * this is the text itself.\n *\n * The third and fourth elements of the token are the start and end indices,\n * respectively, of the token in the original template.\n *\n * Tokens that are the root node of a subtree contain two more elements: 1) an\n * array of tokens in the subtree and 2) the index in the original template at\n * which the closing tag for that section begins.\n *\n * Tokens for partials also contain two more elements: 1) a string value of\n * indendation prior to that tag and 2) the index of that tag on that line -\n * eg a value of 2 indicates the partial is the third tag on this line.\n */\nfunction parseTemplate (template, tags) {\n  if (!template)\n    return [];\n  var lineHasNonSpace = false;\n  var sections = [];     // Stack to hold section tokens\n  var tokens = [];       // Buffer to hold the tokens\n  var spaces = [];       // Indices of whitespace tokens on the current line\n  var hasTag = false;    // Is there a {{tag}} on the current line?\n  var nonSpace = false;  // Is there a non-space char on the current line?\n  var indentation = '';  // Tracks indentation for tags that use it\n  var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n  // Strips all whitespace tokens array for the current line\n  // if there was a {{#tag}} on it and otherwise only space.\n  function stripSpace () {\n    if (hasTag && !nonSpace) {\n      while (spaces.length)\n        delete tokens[spaces.pop()];\n    } else {\n      spaces = [];\n    }\n\n    hasTag = false;\n    nonSpace = false;\n  }\n\n  var openingTagRe, closingTagRe, closingCurlyRe;\n  function compileTags (tagsToCompile) {\n    if (typeof tagsToCompile === 'string')\n      tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n    if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n      throw new Error('Invalid tags: ' + tagsToCompile);\n\n    openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n    closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n    closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n  }\n\n  compileTags(tags || mustache.tags);\n\n  var scanner = new Scanner(template);\n\n  var start, type, value, chr, token, openSection;\n  while (!scanner.eos()) {\n    start = scanner.pos;\n\n    // Match any text between tags.\n    value = scanner.scanUntil(openingTagRe);\n\n    if (value) {\n      for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n        chr = value.charAt(i);\n\n        if (isWhitespace(chr)) {\n          spaces.push(tokens.length);\n          indentation += chr;\n        } else {\n          nonSpace = true;\n          lineHasNonSpace = true;\n          indentation += ' ';\n        }\n\n        tokens.push([ 'text', chr, start, start + 1 ]);\n        start += 1;\n\n        // Check for whitespace on the current line.\n        if (chr === '\\n') {\n          stripSpace();\n          indentation = '';\n          tagIndex = 0;\n          lineHasNonSpace = false;\n        }\n      }\n    }\n\n    // Match the opening tag.\n    if (!scanner.scan(openingTagRe))\n      break;\n\n    hasTag = true;\n\n    // Get the tag type.\n    type = scanner.scan(tagRe) || 'name';\n    scanner.scan(whiteRe);\n\n    // Get the tag value.\n    if (type === '=') {\n      value = scanner.scanUntil(equalsRe);\n      scanner.scan(equalsRe);\n      scanner.scanUntil(closingTagRe);\n    } else if (type === '{') {\n      value = scanner.scanUntil(closingCurlyRe);\n      scanner.scan(curlyRe);\n      scanner.scanUntil(closingTagRe);\n      type = '&';\n    } else {\n      value = scanner.scanUntil(closingTagRe);\n    }\n\n    // Match the closing tag.\n    if (!scanner.scan(closingTagRe))\n      throw new Error('Unclosed tag at ' + scanner.pos);\n\n    if (type == '>') {\n      token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n    } else {\n      token = [ type, value, start, scanner.pos ];\n    }\n    tagIndex++;\n    tokens.push(token);\n\n    if (type === '#' || type === '^') {\n      sections.push(token);\n    } else if (type === '/') {\n      // Check section nesting.\n      openSection = sections.pop();\n\n      if (!openSection)\n        throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n      if (openSection[1] !== value)\n        throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n    } else if (type === 'name' || type === '{' || type === '&') {\n      nonSpace = true;\n    } else if (type === '=') {\n      // Set the tags for the next time around.\n      compileTags(value);\n    }\n  }\n\n  stripSpace();\n\n  // Make sure there are no open sections when we're done.\n  openSection = sections.pop();\n\n  if (openSection)\n    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n  return nestTokens(squashTokens(tokens));\n}\n\n/**\n * Combines the values of consecutive text tokens in the given `tokens` array\n * to a single token.\n */\nfunction squashTokens (tokens) {\n  var squashedTokens = [];\n\n  var token, lastToken;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    if (token) {\n      if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n        lastToken[1] += token[1];\n        lastToken[3] = token[3];\n      } else {\n        squashedTokens.push(token);\n        lastToken = token;\n      }\n    }\n  }\n\n  return squashedTokens;\n}\n\n/**\n * Forms the given array of `tokens` into a nested tree structure where\n * tokens that represent a section have two additional items: 1) an array of\n * all tokens that appear in that section and 2) the index in the original\n * template that represents the end of that section.\n */\nfunction nestTokens (tokens) {\n  var nestedTokens = [];\n  var collector = nestedTokens;\n  var sections = [];\n\n  var token, section;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n    }\n  }\n\n  return nestedTokens;\n}\n\n/**\n * A simple string scanner that is used by the template parser to find\n * tokens in template strings.\n */\nfunction Scanner (string) {\n  this.string = string;\n  this.tail = string;\n  this.pos = 0;\n}\n\n/**\n * Returns `true` if the tail is empty (end of string).\n */\nScanner.prototype.eos = function eos () {\n  return this.tail === '';\n};\n\n/**\n * Tries to match the given regular expression at the current position.\n * Returns the matched text if it can match, the empty string otherwise.\n */\nScanner.prototype.scan = function scan (re) {\n  var match = this.tail.match(re);\n\n  if (!match || match.index !== 0)\n    return '';\n\n  var string = match[0];\n\n  this.tail = this.tail.substring(string.length);\n  this.pos += string.length;\n\n  return string;\n};\n\n/**\n * Skips all text until the given regular expression can be matched. Returns\n * the skipped string, which is the entire tail if no match can be made.\n */\nScanner.prototype.scanUntil = function scanUntil (re) {\n  var index = this.tail.search(re), match;\n\n  switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = '';\n      break;\n    case 0:\n      match = '';\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n  }\n\n  this.pos += match.length;\n\n  return match;\n};\n\n/**\n * Represents a rendering context by wrapping a view object and\n * maintaining a reference to the parent context.\n */\nfunction Context (view, parentContext) {\n  this.view = view;\n  this.cache = { '.': this.view };\n  this.parent = parentContext;\n}\n\n/**\n * Creates a new context using the given view with this context\n * as the parent.\n */\nContext.prototype.push = function push (view) {\n  return new Context(view, this);\n};\n\n/**\n * Returns the value of the given name in this context, traversing\n * up the context hierarchy if the value is absent in this context's view.\n */\nContext.prototype.lookup = function lookup (name) {\n  var cache = this.cache;\n\n  var value;\n  if (cache.hasOwnProperty(name)) {\n    value = cache[name];\n  } else {\n    var context = this, intermediateValue, names, index, lookupHit = false;\n\n    while (context) {\n      if (name.indexOf('.') > 0) {\n        intermediateValue = context.view;\n        names = name.split('.');\n        index = 0;\n\n        /**\n         * Using the dot notion path in `name`, we descend through the\n         * nested objects.\n         *\n         * To be certain that the lookup has been successful, we have to\n         * check if the last object in the path actually has the property\n         * we are looking for. We store the result in `lookupHit`.\n         *\n         * This is specially necessary for when the value has been set to\n         * `undefined` and we want to avoid looking up parent contexts.\n         *\n         * In the case where dot notation is used, we consider the lookup\n         * to be successful even if the last \"object\" in the path is\n         * not actually an object but a primitive (e.g., a string, or an\n         * integer), because it is sometimes useful to access a property\n         * of an autoboxed primitive, such as the length of a string.\n         **/\n        while (intermediateValue != null && index < names.length) {\n          if (index === names.length - 1)\n            lookupHit = (\n              hasProperty(intermediateValue, names[index])\n              || primitiveHasOwnProperty(intermediateValue, names[index])\n            );\n\n          intermediateValue = intermediateValue[names[index++]];\n        }\n      } else {\n        intermediateValue = context.view[name];\n\n        /**\n         * Only checking against `hasProperty`, which always returns `false` if\n         * `context.view` is not an object. Deliberately omitting the check\n         * against `primitiveHasOwnProperty` if dot notation is not used.\n         *\n         * Consider this example:\n         * ```\n         * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n         * ```\n         *\n         * If we were to check also against `primitiveHasOwnProperty`, as we do\n         * in the dot notation case, then render call would return:\n         *\n         * \"The length of a football field is 9.\"\n         *\n         * rather than the expected:\n         *\n         * \"The length of a football field is 100 yards.\"\n         **/\n        lookupHit = hasProperty(context.view, name);\n      }\n\n      if (lookupHit) {\n        value = intermediateValue;\n        break;\n      }\n\n      context = context.parent;\n    }\n\n    cache[name] = value;\n  }\n\n  if (isFunction(value))\n    value = value.call(this.view);\n\n  return value;\n};\n\n/**\n * A Writer knows how to take a stream of tokens and render them to a\n * string, given a context. It also maintains a cache of templates to\n * avoid the need to parse the same template twice.\n */\nfunction Writer () {\n  this.templateCache = {\n    _cache: {},\n    set: function set (key, value) {\n      this._cache[key] = value;\n    },\n    get: function get (key) {\n      return this._cache[key];\n    },\n    clear: function clear () {\n      this._cache = {};\n    }\n  };\n}\n\n/**\n * Clears all cached templates in this writer.\n */\nWriter.prototype.clearCache = function clearCache () {\n  if (typeof this.templateCache !== 'undefined') {\n    this.templateCache.clear();\n  }\n};\n\n/**\n * Parses and caches the given `template` according to the given `tags` or\n * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n * that is generated from the parse.\n */\nWriter.prototype.parse = function parse (template, tags) {\n  var cache = this.templateCache;\n  var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n  var isCacheEnabled = typeof cache !== 'undefined';\n  var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n  if (tokens == undefined) {\n    tokens = parseTemplate(template, tags);\n    isCacheEnabled && cache.set(cacheKey, tokens);\n  }\n  return tokens;\n};\n\n/**\n * High-level method that is used to render the given `template` with\n * the given `view`.\n *\n * The optional `partials` argument may be an object that contains the\n * names and templates of partials that are used in the template. It may\n * also be a function that is used to load partial templates on the fly\n * that takes a single argument: the name of the partial.\n *\n * If the optional `config` argument is given here, then it should be an\n * object with a `tags` attribute or an `escape` attribute or both.\n * If an array is passed, then it will be interpreted the same way as\n * a `tags` attribute on a `config` object.\n *\n * The `tags` attribute of a `config` object must be an array with two\n * string values: the opening and closing tags used in the template (e.g.\n * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n *\n * The `escape` attribute of a `config` object must be a function which\n * accepts a string as input and outputs a safely escaped string.\n * If an `escape` function is not provided, then an HTML-safe string\n * escaping function is used as the default.\n */\nWriter.prototype.render = function render (template, view, partials, config) {\n  var tags = this.getConfigTags(config);\n  var tokens = this.parse(template, tags);\n  var context = (view instanceof Context) ? view : new Context(view, undefined);\n  return this.renderTokens(tokens, context, partials, template, config);\n};\n\n/**\n * Low-level method that renders the given array of `tokens` using\n * the given `context` and `partials`.\n *\n * Note: The `originalTemplate` is only ever used to extract the portion\n * of the original template that was contained in a higher-order section.\n * If the template doesn't use higher-order sections, this argument may\n * be omitted.\n */\nWriter.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n  var buffer = '';\n\n  var token, symbol, value;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    value = undefined;\n    token = tokens[i];\n    symbol = token[0];\n\n    if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n    else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n    else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n    else if (symbol === '&') value = this.unescapedValue(token, context);\n    else if (symbol === 'name') value = this.escapedValue(token, context, config);\n    else if (symbol === 'text') value = this.rawValue(token);\n\n    if (value !== undefined)\n      buffer += value;\n  }\n\n  return buffer;\n};\n\nWriter.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n  var self = this;\n  var buffer = '';\n  var value = context.lookup(token[1]);\n\n  // This function is used to render an arbitrary template\n  // in the current context by higher-order sections.\n  function subRender (template) {\n    return self.render(template, context, partials, config);\n  }\n\n  if (!value) return;\n\n  if (isArray(value)) {\n    for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n      buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n    }\n  } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n    buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n  } else if (isFunction(value)) {\n    if (typeof originalTemplate !== 'string')\n      throw new Error('Cannot use higher-order sections without the original template');\n\n    // Extract the portion of the original template that the section contains.\n    value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n    if (value != null)\n      buffer += value;\n  } else {\n    buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n  }\n  return buffer;\n};\n\nWriter.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n  var value = context.lookup(token[1]);\n\n  // Use JavaScript's definition of falsy. Include empty arrays.\n  // See https://github.com/janl/mustache.js/issues/186\n  if (!value || (isArray(value) && value.length === 0))\n    return this.renderTokens(token[4], context, partials, originalTemplate, config);\n};\n\nWriter.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n  var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n  var partialByNl = partial.split('\\n');\n  for (var i = 0; i < partialByNl.length; i++) {\n    if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n      partialByNl[i] = filteredIndentation + partialByNl[i];\n    }\n  }\n  return partialByNl.join('\\n');\n};\n\nWriter.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n  if (!partials) return;\n  var tags = this.getConfigTags(config);\n\n  var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n  if (value != null) {\n    var lineHasNonSpace = token[6];\n    var tagIndex = token[5];\n    var indentation = token[4];\n    var indentedValue = value;\n    if (tagIndex == 0 && indentation) {\n      indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n    }\n    var tokens = this.parse(indentedValue, tags);\n    return this.renderTokens(tokens, context, partials, indentedValue, config);\n  }\n};\n\nWriter.prototype.unescapedValue = function unescapedValue (token, context) {\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return value;\n};\n\nWriter.prototype.escapedValue = function escapedValue (token, context, config) {\n  var escape = this.getConfigEscape(config) || mustache.escape;\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n};\n\nWriter.prototype.rawValue = function rawValue (token) {\n  return token[1];\n};\n\nWriter.prototype.getConfigTags = function getConfigTags (config) {\n  if (isArray(config)) {\n    return config;\n  }\n  else if (config && typeof config === 'object') {\n    return config.tags;\n  }\n  else {\n    return undefined;\n  }\n};\n\nWriter.prototype.getConfigEscape = function getConfigEscape (config) {\n  if (config && typeof config === 'object' && !isArray(config)) {\n    return config.escape;\n  }\n  else {\n    return undefined;\n  }\n};\n\nvar mustache = {\n  name: 'mustache.js',\n  version: '4.2.0',\n  tags: [ '{{', '}}' ],\n  clearCache: undefined,\n  escape: undefined,\n  parse: undefined,\n  render: undefined,\n  Scanner: undefined,\n  Context: undefined,\n  Writer: undefined,\n  /**\n   * Allows a user to override the default caching strategy, by providing an\n   * object with set, get and clear methods. This can also be used to disable\n   * the cache by setting it to the literal `undefined`.\n   */\n  set templateCache (cache) {\n    defaultWriter.templateCache = cache;\n  },\n  /**\n   * Gets the default or overridden caching object from the default writer.\n   */\n  get templateCache () {\n    return defaultWriter.templateCache;\n  }\n};\n\n// All high-level mustache.* functions use this writer.\nvar defaultWriter = new Writer();\n\n/**\n * Clears all cached templates in the default writer.\n */\nmustache.clearCache = function clearCache () {\n  return defaultWriter.clearCache();\n};\n\n/**\n * Parses and caches the given template in the default writer and returns the\n * array of tokens it contains. Doing this ahead of time avoids the need to\n * parse templates on the fly as they are rendered.\n */\nmustache.parse = function parse (template, tags) {\n  return defaultWriter.parse(template, tags);\n};\n\n/**\n * Renders the `template` with the given `view`, `partials`, and `config`\n * using the default writer.\n */\nmustache.render = function render (template, view, partials, config) {\n  if (typeof template !== 'string') {\n    throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                        'but \"' + typeStr(template) + '\" was given as the first ' +\n                        'argument for mustache#render(template, view, partials)');\n  }\n\n  return defaultWriter.render(template, view, partials, config);\n};\n\n// Export the escaping function so that the user may override it.\n// See https://github.com/janl/mustache.js/issues/244\nmustache.escape = escapeHtml;\n\n// Export these mainly for testing, but also for advanced usage.\nmustache.Scanner = Scanner;\nmustache.Context = Context;\nmustache.Writer = Writer;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mustache);\n\n\n//# sourceURL=webpack://fhirbrowser/../../../node_modules/mustache/mustache.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.js");
/******/ 	
/******/ })()
;